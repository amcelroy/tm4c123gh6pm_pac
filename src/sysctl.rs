# [doc = r"Register block"] # [repr (C)] pub struct RegisterBlock { # [doc = "0x00 - Device Identification 0"] pub did0 : DID0 , # [doc = "0x04 - Device Identification 1"] pub did1 : DID1 , # [doc = "0x08 - Device Capabilities 0"] pub dc0 : DC0 , _reserved3 : [u8 ; 0x04] , # [doc = "0x10 - Device Capabilities 1"] pub dc1 : DC1 , # [doc = "0x14 - Device Capabilities 2"] pub dc2 : DC2 , # [doc = "0x18 - Device Capabilities 3"] pub dc3 : DC3 , # [doc = "0x1c - Device Capabilities 4"] pub dc4 : DC4 , # [doc = "0x20 - Device Capabilities 5"] pub dc5 : DC5 , # [doc = "0x24 - Device Capabilities 6"] pub dc6 : DC6 , # [doc = "0x28 - Device Capabilities 7"] pub dc7 : DC7 , # [doc = "0x2c - Device Capabilities 8"] pub dc8 : DC8 , # [doc = "0x30 - Brown-Out Reset Control"] pub pborctl : PBORCTL , _reserved12 : [u8 ; 0x0c] , # [doc = "0x40 - Software Reset Control 0"] pub srcr0 : SRCR0 , # [doc = "0x44 - Software Reset Control 1"] pub srcr1 : SRCR1 , # [doc = "0x48 - Software Reset Control 2"] pub srcr2 : SRCR2 , _reserved15 : [u8 ; 0x04] , # [doc = "0x50 - Raw Interrupt Status"] pub ris : RIS , # [doc = "0x54 - Interrupt Mask Control"] pub imc : IMC , # [doc = "0x58 - Masked Interrupt Status and Clear"] pub misc : MISC , # [doc = "0x5c - Reset Cause"] pub resc : RESC , # [doc = "0x60 - Run-Mode Clock Configuration"] pub rcc : RCC , _reserved20 : [u8 ; 0x08] , # [doc = "0x6c - GPIO High-Performance Bus Control"] pub gpiohbctl : GPIOHBCTL , # [doc = "0x70 - Run-Mode Clock Configuration 2"] pub rcc2 : RCC2 , _reserved22 : [u8 ; 0x08] , # [doc = "0x7c - Main Oscillator Control"] pub moscctl : MOSCCTL , _reserved23 : [u8 ; 0x80] , # [doc = "0x100 - Run Mode Clock Gating Control Register 0"] pub rcgc0 : RCGC0 , # [doc = "0x104 - Run Mode Clock Gating Control Register 1"] pub rcgc1 : RCGC1 , # [doc = "0x108 - Run Mode Clock Gating Control Register 2"] pub rcgc2 : RCGC2 , _reserved26 : [u8 ; 0x04] , # [doc = "0x110 - Sleep Mode Clock Gating Control Register 0"] pub scgc0 : SCGC0 , # [doc = "0x114 - Sleep Mode Clock Gating Control Register 1"] pub scgc1 : SCGC1 , # [doc = "0x118 - Sleep Mode Clock Gating Control Register 2"] pub scgc2 : SCGC2 , _reserved29 : [u8 ; 0x04] , # [doc = "0x120 - Deep Sleep Mode Clock Gating Control Register 0"] pub dcgc0 : DCGC0 , # [doc = "0x124 - Deep-Sleep Mode Clock Gating Control Register 1"] pub dcgc1 : DCGC1 , # [doc = "0x128 - Deep Sleep Mode Clock Gating Control Register 2"] pub dcgc2 : DCGC2 , _reserved32 : [u8 ; 0x18] , # [doc = "0x144 - Deep Sleep Clock Configuration"] pub dslpclkcfg : DSLPCLKCFG , _reserved33 : [u8 ; 0x04] , # [doc = "0x14c - System Properties"] pub sysprop : SYSPROP , # [doc = "0x150 - Precision Internal Oscillator Calibration"] pub piosccal : PIOSCCAL , # [doc = "0x154 - Precision Internal Oscillator Statistics"] pub pioscstat : PIOSCSTAT , _reserved36 : [u8 ; 0x08] , # [doc = "0x160 - PLL Frequency 0"] pub pllfreq0 : PLLFREQ0 , # [doc = "0x164 - PLL Frequency 1"] pub pllfreq1 : PLLFREQ1 , # [doc = "0x168 - PLL Status"] pub pllstat : PLLSTAT , _reserved39 : [u8 ; 0x1c] , # [doc = "0x188 - Sleep Power Configuration"] pub slppwrcfg : SLPPWRCFG , # [doc = "0x18c - Deep-Sleep Power Configuration"] pub dslppwrcfg : DSLPPWRCFG , # [doc = "0x190 - Device Capabilities 9"] pub dc9 : DC9 , _reserved42 : [u8 ; 0x0c] , # [doc = "0x1a0 - Non-Volatile Memory Information"] pub nvmstat : NVMSTAT , _reserved43 : [u8 ; 0x10] , # [doc = "0x1b4 - LDO Sleep Power Control"] pub ldospctl : LDOSPCTL , _reserved44 : [u8 ; 0x04] , # [doc = "0x1bc - LDO Deep-Sleep Power Control"] pub ldodpctl : LDODPCTL , _reserved45 : [u8 ; 0x0140] , # [doc = "0x300 - Watchdog Timer Peripheral Present"] pub ppwd : PPWD , # [doc = "0x304 - 16/32-Bit General-Purpose Timer Peripheral Present"] pub pptimer : PPTIMER , # [doc = "0x308 - General-Purpose Input/Output Peripheral Present"] pub ppgpio : PPGPIO , # [doc = "0x30c - Micro Direct Memory Access Peripheral Present"] pub ppdma : PPDMA , _reserved49 : [u8 ; 0x04] , # [doc = "0x314 - Hibernation Peripheral Present"] pub pphib : PPHIB , # [doc = "0x318 - Universal Asynchronous Receiver/Transmitter Peripheral Present"] pub ppuart : PPUART , # [doc = "0x31c - Synchronous Serial Interface Peripheral Present"] pub ppssi : PPSSI , # [doc = "0x320 - Inter-Integrated Circuit Peripheral Present"] pub ppi2c : PPI2C , _reserved53 : [u8 ; 0x04] , # [doc = "0x328 - Universal Serial Bus Peripheral Present"] pub ppusb : PPUSB , _reserved54 : [u8 ; 0x08] , # [doc = "0x334 - Controller Area Network Peripheral Present"] pub ppcan : PPCAN , # [doc = "0x338 - Analog-to-Digital Converter Peripheral Present"] pub ppadc : PPADC , # [doc = "0x33c - Analog Comparator Peripheral Present"] pub ppacmp : PPACMP , # [doc = "0x340 - Pulse Width Modulator Peripheral Present"] pub pppwm : PPPWM , # [doc = "0x344 - Quadrature Encoder Interface Peripheral Present"] pub ppqei : PPQEI , _reserved59 : [u8 ; 0x10] , # [doc = "0x358 - EEPROM Peripheral Present"] pub ppeeprom : PPEEPROM , # [doc = "0x35c - 32/64-Bit Wide General-Purpose Timer Peripheral Present"] pub ppwtimer : PPWTIMER , _reserved61 : [u8 ; 0x01a0] , # [doc = "0x500 - Watchdog Timer Software Reset"] pub srwd : SRWD , # [doc = "0x504 - 16/32-Bit General-Purpose Timer Software Reset"] pub srtimer : SRTIMER , # [doc = "0x508 - General-Purpose Input/Output Software Reset"] pub srgpio : SRGPIO , # [doc = "0x50c - Micro Direct Memory Access Software Reset"] pub srdma : SRDMA , _reserved65 : [u8 ; 0x04] , # [doc = "0x514 - Hibernation Software Reset"] pub srhib : SRHIB , # [doc = "0x518 - Universal Asynchronous Receiver/Transmitter Software Reset"] pub sruart : SRUART , # [doc = "0x51c - Synchronous Serial Interface Software Reset"] pub srssi : SRSSI , # [doc = "0x520 - Inter-Integrated Circuit Software Reset"] pub sri2c : SRI2C , _reserved69 : [u8 ; 0x04] , # [doc = "0x528 - Universal Serial Bus Software Reset"] pub srusb : SRUSB , _reserved70 : [u8 ; 0x08] , # [doc = "0x534 - Controller Area Network Software Reset"] pub srcan : SRCAN , # [doc = "0x538 - Analog-to-Digital Converter Software Reset"] pub sradc : SRADC , # [doc = "0x53c - Analog Comparator Software Reset"] pub sracmp : SRACMP , # [doc = "0x540 - Pulse Width Modulator Software Reset"] pub srpwm : SRPWM , # [doc = "0x544 - Quadrature Encoder Interface Software Reset"] pub srqei : SRQEI , _reserved75 : [u8 ; 0x10] , # [doc = "0x558 - EEPROM Software Reset"] pub sreeprom : SREEPROM , # [doc = "0x55c - 32/64-Bit Wide General-Purpose Timer Software Reset"] pub srwtimer : SRWTIMER , _reserved77 : [u8 ; 0xa0] , # [doc = "0x600 - Watchdog Timer Run Mode Clock Gating Control"] pub rcgcwd : RCGCWD , # [doc = "0x604 - 16/32-Bit General-Purpose Timer Run Mode Clock Gating Control"] pub rcgctimer : RCGCTIMER , # [doc = "0x608 - General-Purpose Input/Output Run Mode Clock Gating Control"] pub rcgcgpio : RCGCGPIO , # [doc = "0x60c - Micro Direct Memory Access Run Mode Clock Gating Control"] pub rcgcdma : RCGCDMA , _reserved81 : [u8 ; 0x04] , # [doc = "0x614 - Hibernation Run Mode Clock Gating Control"] pub rcgchib : RCGCHIB , # [doc = "0x618 - Universal Asynchronous Receiver/Transmitter Run Mode Clock Gating Control"] pub rcgcuart : RCGCUART , # [doc = "0x61c - Synchronous Serial Interface Run Mode Clock Gating Control"] pub rcgcssi : RCGCSSI , # [doc = "0x620 - Inter-Integrated Circuit Run Mode Clock Gating Control"] pub rcgci2c : RCGCI2C , _reserved85 : [u8 ; 0x04] , # [doc = "0x628 - Universal Serial Bus Run Mode Clock Gating Control"] pub rcgcusb : RCGCUSB , _reserved86 : [u8 ; 0x08] , # [doc = "0x634 - Controller Area Network Run Mode Clock Gating Control"] pub rcgccan : RCGCCAN , # [doc = "0x638 - Analog-to-Digital Converter Run Mode Clock Gating Control"] pub rcgcadc : RCGCADC , # [doc = "0x63c - Analog Comparator Run Mode Clock Gating Control"] pub rcgcacmp : RCGCACMP , # [doc = "0x640 - Pulse Width Modulator Run Mode Clock Gating Control"] pub rcgcpwm : RCGCPWM , # [doc = "0x644 - Quadrature Encoder Interface Run Mode Clock Gating Control"] pub rcgcqei : RCGCQEI , _reserved91 : [u8 ; 0x10] , # [doc = "0x658 - EEPROM Run Mode Clock Gating Control"] pub rcgceeprom : RCGCEEPROM , # [doc = "0x65c - 32/64-Bit Wide General-Purpose Timer Run Mode Clock Gating Control"] pub rcgcwtimer : RCGCWTIMER , _reserved93 : [u8 ; 0xa0] , # [doc = "0x700 - Watchdog Timer Sleep Mode Clock Gating Control"] pub scgcwd : SCGCWD , # [doc = "0x704 - 16/32-Bit General-Purpose Timer Sleep Mode Clock Gating Control"] pub scgctimer : SCGCTIMER , # [doc = "0x708 - General-Purpose Input/Output Sleep Mode Clock Gating Control"] pub scgcgpio : SCGCGPIO , # [doc = "0x70c - Micro Direct Memory Access Sleep Mode Clock Gating Control"] pub scgcdma : SCGCDMA , _reserved97 : [u8 ; 0x04] , # [doc = "0x714 - Hibernation Sleep Mode Clock Gating Control"] pub scgchib : SCGCHIB , # [doc = "0x718 - Universal Asynchronous Receiver/Transmitter Sleep Mode Clock Gating Control"] pub scgcuart : SCGCUART , # [doc = "0x71c - Synchronous Serial Interface Sleep Mode Clock Gating Control"] pub scgcssi : SCGCSSI , # [doc = "0x720 - Inter-Integrated Circuit Sleep Mode Clock Gating Control"] pub scgci2c : SCGCI2C , _reserved101 : [u8 ; 0x04] , # [doc = "0x728 - Universal Serial Bus Sleep Mode Clock Gating Control"] pub scgcusb : SCGCUSB , _reserved102 : [u8 ; 0x08] , # [doc = "0x734 - Controller Area Network Sleep Mode Clock Gating Control"] pub scgccan : SCGCCAN , # [doc = "0x738 - Analog-to-Digital Converter Sleep Mode Clock Gating Control"] pub scgcadc : SCGCADC , # [doc = "0x73c - Analog Comparator Sleep Mode Clock Gating Control"] pub scgcacmp : SCGCACMP , # [doc = "0x740 - Pulse Width Modulator Sleep Mode Clock Gating Control"] pub scgcpwm : SCGCPWM , # [doc = "0x744 - Quadrature Encoder Interface Sleep Mode Clock Gating Control"] pub scgcqei : SCGCQEI , _reserved107 : [u8 ; 0x10] , # [doc = "0x758 - EEPROM Sleep Mode Clock Gating Control"] pub scgceeprom : SCGCEEPROM , # [doc = "0x75c - 32/64-Bit Wide General-Purpose Timer Sleep Mode Clock Gating Control"] pub scgcwtimer : SCGCWTIMER , _reserved109 : [u8 ; 0xa0] , # [doc = "0x800 - Watchdog Timer Deep-Sleep Mode Clock Gating Control"] pub dcgcwd : DCGCWD , # [doc = "0x804 - 16/32-Bit General-Purpose Timer Deep-Sleep Mode Clock Gating Control"] pub dcgctimer : DCGCTIMER , # [doc = "0x808 - General-Purpose Input/Output Deep-Sleep Mode Clock Gating Control"] pub dcgcgpio : DCGCGPIO , # [doc = "0x80c - Micro Direct Memory Access Deep-Sleep Mode Clock Gating Control"] pub dcgcdma : DCGCDMA , _reserved113 : [u8 ; 0x04] , # [doc = "0x814 - Hibernation Deep-Sleep Mode Clock Gating Control"] pub dcgchib : DCGCHIB , # [doc = "0x818 - Universal Asynchronous Receiver/Transmitter Deep-Sleep Mode Clock Gating Control"] pub dcgcuart : DCGCUART , # [doc = "0x81c - Synchronous Serial Interface Deep-Sleep Mode Clock Gating Control"] pub dcgcssi : DCGCSSI , # [doc = "0x820 - Inter-Integrated Circuit Deep-Sleep Mode Clock Gating Control"] pub dcgci2c : DCGCI2C , _reserved117 : [u8 ; 0x04] , # [doc = "0x828 - Universal Serial Bus Deep-Sleep Mode Clock Gating Control"] pub dcgcusb : DCGCUSB , _reserved118 : [u8 ; 0x08] , # [doc = "0x834 - Controller Area Network Deep-Sleep Mode Clock Gating Control"] pub dcgccan : DCGCCAN , # [doc = "0x838 - Analog-to-Digital Converter Deep-Sleep Mode Clock Gating Control"] pub dcgcadc : DCGCADC , # [doc = "0x83c - Analog Comparator Deep-Sleep Mode Clock Gating Control"] pub dcgcacmp : DCGCACMP , # [doc = "0x840 - Pulse Width Modulator Deep-Sleep Mode Clock Gating Control"] pub dcgcpwm : DCGCPWM , # [doc = "0x844 - Quadrature Encoder Interface Deep-Sleep Mode Clock Gating Control"] pub dcgcqei : DCGCQEI , _reserved123 : [u8 ; 0x10] , # [doc = "0x858 - EEPROM Deep-Sleep Mode Clock Gating Control"] pub dcgceeprom : DCGCEEPROM , # [doc = "0x85c - 32/64-Bit Wide General-Purpose Timer Deep-Sleep Mode Clock Gating Control"] pub dcgcwtimer : DCGCWTIMER , _reserved125 : [u8 ; 0x01a0] , # [doc = "0xa00 - Watchdog Timer Peripheral Ready"] pub prwd : PRWD , # [doc = "0xa04 - 16/32-Bit General-Purpose Timer Peripheral Ready"] pub prtimer : PRTIMER , # [doc = "0xa08 - General-Purpose Input/Output Peripheral Ready"] pub prgpio : PRGPIO , # [doc = "0xa0c - Micro Direct Memory Access Peripheral Ready"] pub prdma : PRDMA , _reserved129 : [u8 ; 0x04] , # [doc = "0xa14 - Hibernation Peripheral Ready"] pub prhib : PRHIB , # [doc = "0xa18 - Universal Asynchronous Receiver/Transmitter Peripheral Ready"] pub pruart : PRUART , # [doc = "0xa1c - Synchronous Serial Interface Peripheral Ready"] pub prssi : PRSSI , # [doc = "0xa20 - Inter-Integrated Circuit Peripheral Ready"] pub pri2c : PRI2C , _reserved133 : [u8 ; 0x04] , # [doc = "0xa28 - Universal Serial Bus Peripheral Ready"] pub prusb : PRUSB , _reserved134 : [u8 ; 0x08] , # [doc = "0xa34 - Controller Area Network Peripheral Ready"] pub prcan : PRCAN , # [doc = "0xa38 - Analog-to-Digital Converter Peripheral Ready"] pub pradc : PRADC , # [doc = "0xa3c - Analog Comparator Peripheral Ready"] pub pracmp : PRACMP , # [doc = "0xa40 - Pulse Width Modulator Peripheral Ready"] pub prpwm : PRPWM , # [doc = "0xa44 - Quadrature Encoder Interface Peripheral Ready"] pub prqei : PRQEI , _reserved139 : [u8 ; 0x10] , # [doc = "0xa58 - EEPROM Peripheral Ready"] pub preeprom : PREEPROM , # [doc = "0xa5c - 32/64-Bit Wide General-Purpose Timer Peripheral Ready"] pub prwtimer : PRWTIMER , } # [doc = "DID0 (rw) register accessor: an alias for `Reg<DID0_SPEC>`"] pub type DID0 = crate :: Reg < did0 :: DID0_SPEC > ; # [doc = "Device Identification 0"] pub mod did0 ; # [doc = "DID1 (rw) register accessor: an alias for `Reg<DID1_SPEC>`"] pub type DID1 = crate :: Reg < did1 :: DID1_SPEC > ; # [doc = "Device Identification 1"] pub mod did1 ; # [doc = "DC0 (rw) register accessor: an alias for `Reg<DC0_SPEC>`"] pub type DC0 = crate :: Reg < dc0 :: DC0_SPEC > ; # [doc = "Device Capabilities 0"] pub mod dc0 ; # [doc = "DC1 (rw) register accessor: an alias for `Reg<DC1_SPEC>`"] pub type DC1 = crate :: Reg < dc1 :: DC1_SPEC > ; # [doc = "Device Capabilities 1"] pub mod dc1 ; # [doc = "DC2 (rw) register accessor: an alias for `Reg<DC2_SPEC>`"] pub type DC2 = crate :: Reg < dc2 :: DC2_SPEC > ; # [doc = "Device Capabilities 2"] pub mod dc2 ; # [doc = "DC3 (rw) register accessor: an alias for `Reg<DC3_SPEC>`"] pub type DC3 = crate :: Reg < dc3 :: DC3_SPEC > ; # [doc = "Device Capabilities 3"] pub mod dc3 ; # [doc = "DC4 (rw) register accessor: an alias for `Reg<DC4_SPEC>`"] pub type DC4 = crate :: Reg < dc4 :: DC4_SPEC > ; # [doc = "Device Capabilities 4"] pub mod dc4 ; # [doc = "DC5 (rw) register accessor: an alias for `Reg<DC5_SPEC>`"] pub type DC5 = crate :: Reg < dc5 :: DC5_SPEC > ; # [doc = "Device Capabilities 5"] pub mod dc5 ; # [doc = "DC6 (rw) register accessor: an alias for `Reg<DC6_SPEC>`"] pub type DC6 = crate :: Reg < dc6 :: DC6_SPEC > ; # [doc = "Device Capabilities 6"] pub mod dc6 ; # [doc = "DC7 (rw) register accessor: an alias for `Reg<DC7_SPEC>`"] pub type DC7 = crate :: Reg < dc7 :: DC7_SPEC > ; # [doc = "Device Capabilities 7"] pub mod dc7 ; # [doc = "DC8 (rw) register accessor: an alias for `Reg<DC8_SPEC>`"] pub type DC8 = crate :: Reg < dc8 :: DC8_SPEC > ; # [doc = "Device Capabilities 8"] pub mod dc8 ; # [doc = "PBORCTL (rw) register accessor: an alias for `Reg<PBORCTL_SPEC>`"] pub type PBORCTL = crate :: Reg < pborctl :: PBORCTL_SPEC > ; # [doc = "Brown-Out Reset Control"] pub mod pborctl ; # [doc = "SRCR0 (rw) register accessor: an alias for `Reg<SRCR0_SPEC>`"] pub type SRCR0 = crate :: Reg < srcr0 :: SRCR0_SPEC > ; # [doc = "Software Reset Control 0"] pub mod srcr0 ; # [doc = "SRCR1 (rw) register accessor: an alias for `Reg<SRCR1_SPEC>`"] pub type SRCR1 = crate :: Reg < srcr1 :: SRCR1_SPEC > ; # [doc = "Software Reset Control 1"] pub mod srcr1 ; # [doc = "SRCR2 (rw) register accessor: an alias for `Reg<SRCR2_SPEC>`"] pub type SRCR2 = crate :: Reg < srcr2 :: SRCR2_SPEC > ; # [doc = "Software Reset Control 2"] pub mod srcr2 ; # [doc = "RIS (rw) register accessor: an alias for `Reg<RIS_SPEC>`"] pub type RIS = crate :: Reg < ris :: RIS_SPEC > ; # [doc = "Raw Interrupt Status"] pub mod ris ; # [doc = "IMC (rw) register accessor: an alias for `Reg<IMC_SPEC>`"] pub type IMC = crate :: Reg < imc :: IMC_SPEC > ; # [doc = "Interrupt Mask Control"] pub mod imc ; # [doc = "MISC (rw) register accessor: an alias for `Reg<MISC_SPEC>`"] pub type MISC = crate :: Reg < misc :: MISC_SPEC > ; # [doc = "Masked Interrupt Status and Clear"] pub mod misc ; # [doc = "RESC (rw) register accessor: an alias for `Reg<RESC_SPEC>`"] pub type RESC = crate :: Reg < resc :: RESC_SPEC > ; # [doc = "Reset Cause"] pub mod resc ; # [doc = "RCC (rw) register accessor: an alias for `Reg<RCC_SPEC>`"] pub type RCC = crate :: Reg < rcc :: RCC_SPEC > ; # [doc = "Run-Mode Clock Configuration"] pub mod rcc ; # [doc = "GPIOHBCTL (rw) register accessor: an alias for `Reg<GPIOHBCTL_SPEC>`"] pub type GPIOHBCTL = crate :: Reg < gpiohbctl :: GPIOHBCTL_SPEC > ; # [doc = "GPIO High-Performance Bus Control"] pub mod gpiohbctl ; # [doc = "RCC2 (rw) register accessor: an alias for `Reg<RCC2_SPEC>`"] pub type RCC2 = crate :: Reg < rcc2 :: RCC2_SPEC > ; # [doc = "Run-Mode Clock Configuration 2"] pub mod rcc2 ; # [doc = "MOSCCTL (rw) register accessor: an alias for `Reg<MOSCCTL_SPEC>`"] pub type MOSCCTL = crate :: Reg < moscctl :: MOSCCTL_SPEC > ; # [doc = "Main Oscillator Control"] pub mod moscctl ; # [doc = "RCGC0 (rw) register accessor: an alias for `Reg<RCGC0_SPEC>`"] pub type RCGC0 = crate :: Reg < rcgc0 :: RCGC0_SPEC > ; # [doc = "Run Mode Clock Gating Control Register 0"] pub mod rcgc0 ; # [doc = "RCGC1 (rw) register accessor: an alias for `Reg<RCGC1_SPEC>`"] pub type RCGC1 = crate :: Reg < rcgc1 :: RCGC1_SPEC > ; # [doc = "Run Mode Clock Gating Control Register 1"] pub mod rcgc1 ; # [doc = "RCGC2 (rw) register accessor: an alias for `Reg<RCGC2_SPEC>`"] pub type RCGC2 = crate :: Reg < rcgc2 :: RCGC2_SPEC > ; # [doc = "Run Mode Clock Gating Control Register 2"] pub mod rcgc2 ; # [doc = "SCGC0 (rw) register accessor: an alias for `Reg<SCGC0_SPEC>`"] pub type SCGC0 = crate :: Reg < scgc0 :: SCGC0_SPEC > ; # [doc = "Sleep Mode Clock Gating Control Register 0"] pub mod scgc0 ; # [doc = "SCGC1 (rw) register accessor: an alias for `Reg<SCGC1_SPEC>`"] pub type SCGC1 = crate :: Reg < scgc1 :: SCGC1_SPEC > ; # [doc = "Sleep Mode Clock Gating Control Register 1"] pub mod scgc1 ; # [doc = "SCGC2 (rw) register accessor: an alias for `Reg<SCGC2_SPEC>`"] pub type SCGC2 = crate :: Reg < scgc2 :: SCGC2_SPEC > ; # [doc = "Sleep Mode Clock Gating Control Register 2"] pub mod scgc2 ; # [doc = "DCGC0 (rw) register accessor: an alias for `Reg<DCGC0_SPEC>`"] pub type DCGC0 = crate :: Reg < dcgc0 :: DCGC0_SPEC > ; # [doc = "Deep Sleep Mode Clock Gating Control Register 0"] pub mod dcgc0 ; # [doc = "DCGC1 (rw) register accessor: an alias for `Reg<DCGC1_SPEC>`"] pub type DCGC1 = crate :: Reg < dcgc1 :: DCGC1_SPEC > ; # [doc = "Deep-Sleep Mode Clock Gating Control Register 1"] pub mod dcgc1 ; # [doc = "DCGC2 (rw) register accessor: an alias for `Reg<DCGC2_SPEC>`"] pub type DCGC2 = crate :: Reg < dcgc2 :: DCGC2_SPEC > ; # [doc = "Deep Sleep Mode Clock Gating Control Register 2"] pub mod dcgc2 ; # [doc = "DSLPCLKCFG (rw) register accessor: an alias for `Reg<DSLPCLKCFG_SPEC>`"] pub type DSLPCLKCFG = crate :: Reg < dslpclkcfg :: DSLPCLKCFG_SPEC > ; # [doc = "Deep Sleep Clock Configuration"] pub mod dslpclkcfg ; # [doc = "SYSPROP (rw) register accessor: an alias for `Reg<SYSPROP_SPEC>`"] pub type SYSPROP = crate :: Reg < sysprop :: SYSPROP_SPEC > ; # [doc = "System Properties"] pub mod sysprop ; # [doc = "PIOSCCAL (rw) register accessor: an alias for `Reg<PIOSCCAL_SPEC>`"] pub type PIOSCCAL = crate :: Reg < piosccal :: PIOSCCAL_SPEC > ; # [doc = "Precision Internal Oscillator Calibration"] pub mod piosccal ; # [doc = "PIOSCSTAT (rw) register accessor: an alias for `Reg<PIOSCSTAT_SPEC>`"] pub type PIOSCSTAT = crate :: Reg < pioscstat :: PIOSCSTAT_SPEC > ; # [doc = "Precision Internal Oscillator Statistics"] pub mod pioscstat ; # [doc = "PLLFREQ0 (rw) register accessor: an alias for `Reg<PLLFREQ0_SPEC>`"] pub type PLLFREQ0 = crate :: Reg < pllfreq0 :: PLLFREQ0_SPEC > ; # [doc = "PLL Frequency 0"] pub mod pllfreq0 ; # [doc = "PLLFREQ1 (rw) register accessor: an alias for `Reg<PLLFREQ1_SPEC>`"] pub type PLLFREQ1 = crate :: Reg < pllfreq1 :: PLLFREQ1_SPEC > ; # [doc = "PLL Frequency 1"] pub mod pllfreq1 ; # [doc = "PLLSTAT (rw) register accessor: an alias for `Reg<PLLSTAT_SPEC>`"] pub type PLLSTAT = crate :: Reg < pllstat :: PLLSTAT_SPEC > ; # [doc = "PLL Status"] pub mod pllstat ; # [doc = "SLPPWRCFG (rw) register accessor: an alias for `Reg<SLPPWRCFG_SPEC>`"] pub type SLPPWRCFG = crate :: Reg < slppwrcfg :: SLPPWRCFG_SPEC > ; # [doc = "Sleep Power Configuration"] pub mod slppwrcfg ; # [doc = "DSLPPWRCFG (rw) register accessor: an alias for `Reg<DSLPPWRCFG_SPEC>`"] pub type DSLPPWRCFG = crate :: Reg < dslppwrcfg :: DSLPPWRCFG_SPEC > ; # [doc = "Deep-Sleep Power Configuration"] pub mod dslppwrcfg ; # [doc = "DC9 (rw) register accessor: an alias for `Reg<DC9_SPEC>`"] pub type DC9 = crate :: Reg < dc9 :: DC9_SPEC > ; # [doc = "Device Capabilities 9"] pub mod dc9 ; # [doc = "NVMSTAT (rw) register accessor: an alias for `Reg<NVMSTAT_SPEC>`"] pub type NVMSTAT = crate :: Reg < nvmstat :: NVMSTAT_SPEC > ; # [doc = "Non-Volatile Memory Information"] pub mod nvmstat ; # [doc = "LDOSPCTL (rw) register accessor: an alias for `Reg<LDOSPCTL_SPEC>`"] pub type LDOSPCTL = crate :: Reg < ldospctl :: LDOSPCTL_SPEC > ; # [doc = "LDO Sleep Power Control"] pub mod ldospctl ; # [doc = "LDODPCTL (rw) register accessor: an alias for `Reg<LDODPCTL_SPEC>`"] pub type LDODPCTL = crate :: Reg < ldodpctl :: LDODPCTL_SPEC > ; # [doc = "LDO Deep-Sleep Power Control"] pub mod ldodpctl ; # [doc = "PPWD (rw) register accessor: an alias for `Reg<PPWD_SPEC>`"] pub type PPWD = crate :: Reg < ppwd :: PPWD_SPEC > ; # [doc = "Watchdog Timer Peripheral Present"] pub mod ppwd ; # [doc = "PPTIMER (rw) register accessor: an alias for `Reg<PPTIMER_SPEC>`"] pub type PPTIMER = crate :: Reg < pptimer :: PPTIMER_SPEC > ; # [doc = "16/32-Bit General-Purpose Timer Peripheral Present"] pub mod pptimer ; # [doc = "PPGPIO (rw) register accessor: an alias for `Reg<PPGPIO_SPEC>`"] pub type PPGPIO = crate :: Reg < ppgpio :: PPGPIO_SPEC > ; # [doc = "General-Purpose Input/Output Peripheral Present"] pub mod ppgpio ; # [doc = "PPDMA (rw) register accessor: an alias for `Reg<PPDMA_SPEC>`"] pub type PPDMA = crate :: Reg < ppdma :: PPDMA_SPEC > ; # [doc = "Micro Direct Memory Access Peripheral Present"] pub mod ppdma ; # [doc = "PPHIB (rw) register accessor: an alias for `Reg<PPHIB_SPEC>`"] pub type PPHIB = crate :: Reg < pphib :: PPHIB_SPEC > ; # [doc = "Hibernation Peripheral Present"] pub mod pphib ; # [doc = "PPUART (rw) register accessor: an alias for `Reg<PPUART_SPEC>`"] pub type PPUART = crate :: Reg < ppuart :: PPUART_SPEC > ; # [doc = "Universal Asynchronous Receiver/Transmitter Peripheral Present"] pub mod ppuart ; # [doc = "PPSSI (rw) register accessor: an alias for `Reg<PPSSI_SPEC>`"] pub type PPSSI = crate :: Reg < ppssi :: PPSSI_SPEC > ; # [doc = "Synchronous Serial Interface Peripheral Present"] pub mod ppssi ; # [doc = "PPI2C (rw) register accessor: an alias for `Reg<PPI2C_SPEC>`"] pub type PPI2C = crate :: Reg < ppi2c :: PPI2C_SPEC > ; # [doc = "Inter-Integrated Circuit Peripheral Present"] pub mod ppi2c ; # [doc = "PPUSB (rw) register accessor: an alias for `Reg<PPUSB_SPEC>`"] pub type PPUSB = crate :: Reg < ppusb :: PPUSB_SPEC > ; # [doc = "Universal Serial Bus Peripheral Present"] pub mod ppusb ; # [doc = "PPCAN (rw) register accessor: an alias for `Reg<PPCAN_SPEC>`"] pub type PPCAN = crate :: Reg < ppcan :: PPCAN_SPEC > ; # [doc = "Controller Area Network Peripheral Present"] pub mod ppcan ; # [doc = "PPADC (rw) register accessor: an alias for `Reg<PPADC_SPEC>`"] pub type PPADC = crate :: Reg < ppadc :: PPADC_SPEC > ; # [doc = "Analog-to-Digital Converter Peripheral Present"] pub mod ppadc ; # [doc = "PPACMP (rw) register accessor: an alias for `Reg<PPACMP_SPEC>`"] pub type PPACMP = crate :: Reg < ppacmp :: PPACMP_SPEC > ; # [doc = "Analog Comparator Peripheral Present"] pub mod ppacmp ; # [doc = "PPPWM (rw) register accessor: an alias for `Reg<PPPWM_SPEC>`"] pub type PPPWM = crate :: Reg < pppwm :: PPPWM_SPEC > ; # [doc = "Pulse Width Modulator Peripheral Present"] pub mod pppwm ; # [doc = "PPQEI (rw) register accessor: an alias for `Reg<PPQEI_SPEC>`"] pub type PPQEI = crate :: Reg < ppqei :: PPQEI_SPEC > ; # [doc = "Quadrature Encoder Interface Peripheral Present"] pub mod ppqei ; # [doc = "PPEEPROM (rw) register accessor: an alias for `Reg<PPEEPROM_SPEC>`"] pub type PPEEPROM = crate :: Reg < ppeeprom :: PPEEPROM_SPEC > ; # [doc = "EEPROM Peripheral Present"] pub mod ppeeprom ; # [doc = "PPWTIMER (rw) register accessor: an alias for `Reg<PPWTIMER_SPEC>`"] pub type PPWTIMER = crate :: Reg < ppwtimer :: PPWTIMER_SPEC > ; # [doc = "32/64-Bit Wide General-Purpose Timer Peripheral Present"] pub mod ppwtimer ; # [doc = "SRWD (rw) register accessor: an alias for `Reg<SRWD_SPEC>`"] pub type SRWD = crate :: Reg < srwd :: SRWD_SPEC > ; # [doc = "Watchdog Timer Software Reset"] pub mod srwd ; # [doc = "SRTIMER (rw) register accessor: an alias for `Reg<SRTIMER_SPEC>`"] pub type SRTIMER = crate :: Reg < srtimer :: SRTIMER_SPEC > ; # [doc = "16/32-Bit General-Purpose Timer Software Reset"] pub mod srtimer ; # [doc = "SRGPIO (rw) register accessor: an alias for `Reg<SRGPIO_SPEC>`"] pub type SRGPIO = crate :: Reg < srgpio :: SRGPIO_SPEC > ; # [doc = "General-Purpose Input/Output Software Reset"] pub mod srgpio ; # [doc = "SRDMA (rw) register accessor: an alias for `Reg<SRDMA_SPEC>`"] pub type SRDMA = crate :: Reg < srdma :: SRDMA_SPEC > ; # [doc = "Micro Direct Memory Access Software Reset"] pub mod srdma ; # [doc = "SRHIB (rw) register accessor: an alias for `Reg<SRHIB_SPEC>`"] pub type SRHIB = crate :: Reg < srhib :: SRHIB_SPEC > ; # [doc = "Hibernation Software Reset"] pub mod srhib ; # [doc = "SRUART (rw) register accessor: an alias for `Reg<SRUART_SPEC>`"] pub type SRUART = crate :: Reg < sruart :: SRUART_SPEC > ; # [doc = "Universal Asynchronous Receiver/Transmitter Software Reset"] pub mod sruart ; # [doc = "SRSSI (rw) register accessor: an alias for `Reg<SRSSI_SPEC>`"] pub type SRSSI = crate :: Reg < srssi :: SRSSI_SPEC > ; # [doc = "Synchronous Serial Interface Software Reset"] pub mod srssi ; # [doc = "SRI2C (rw) register accessor: an alias for `Reg<SRI2C_SPEC>`"] pub type SRI2C = crate :: Reg < sri2c :: SRI2C_SPEC > ; # [doc = "Inter-Integrated Circuit Software Reset"] pub mod sri2c ; # [doc = "SRUSB (rw) register accessor: an alias for `Reg<SRUSB_SPEC>`"] pub type SRUSB = crate :: Reg < srusb :: SRUSB_SPEC > ; # [doc = "Universal Serial Bus Software Reset"] pub mod srusb ; # [doc = "SRCAN (rw) register accessor: an alias for `Reg<SRCAN_SPEC>`"] pub type SRCAN = crate :: Reg < srcan :: SRCAN_SPEC > ; # [doc = "Controller Area Network Software Reset"] pub mod srcan ; # [doc = "SRADC (rw) register accessor: an alias for `Reg<SRADC_SPEC>`"] pub type SRADC = crate :: Reg < sradc :: SRADC_SPEC > ; # [doc = "Analog-to-Digital Converter Software Reset"] pub mod sradc ; # [doc = "SRACMP (rw) register accessor: an alias for `Reg<SRACMP_SPEC>`"] pub type SRACMP = crate :: Reg < sracmp :: SRACMP_SPEC > ; # [doc = "Analog Comparator Software Reset"] pub mod sracmp ; # [doc = "SRPWM (rw) register accessor: an alias for `Reg<SRPWM_SPEC>`"] pub type SRPWM = crate :: Reg < srpwm :: SRPWM_SPEC > ; # [doc = "Pulse Width Modulator Software Reset"] pub mod srpwm ; # [doc = "SRQEI (rw) register accessor: an alias for `Reg<SRQEI_SPEC>`"] pub type SRQEI = crate :: Reg < srqei :: SRQEI_SPEC > ; # [doc = "Quadrature Encoder Interface Software Reset"] pub mod srqei ; # [doc = "SREEPROM (rw) register accessor: an alias for `Reg<SREEPROM_SPEC>`"] pub type SREEPROM = crate :: Reg < sreeprom :: SREEPROM_SPEC > ; # [doc = "EEPROM Software Reset"] pub mod sreeprom ; # [doc = "SRWTIMER (rw) register accessor: an alias for `Reg<SRWTIMER_SPEC>`"] pub type SRWTIMER = crate :: Reg < srwtimer :: SRWTIMER_SPEC > ; # [doc = "32/64-Bit Wide General-Purpose Timer Software Reset"] pub mod srwtimer ; # [doc = "RCGCWD (rw) register accessor: an alias for `Reg<RCGCWD_SPEC>`"] pub type RCGCWD = crate :: Reg < rcgcwd :: RCGCWD_SPEC > ; # [doc = "Watchdog Timer Run Mode Clock Gating Control"] pub mod rcgcwd ; # [doc = "RCGCTIMER (rw) register accessor: an alias for `Reg<RCGCTIMER_SPEC>`"] pub type RCGCTIMER = crate :: Reg < rcgctimer :: RCGCTIMER_SPEC > ; # [doc = "16/32-Bit General-Purpose Timer Run Mode Clock Gating Control"] pub mod rcgctimer ; # [doc = "RCGCGPIO (rw) register accessor: an alias for `Reg<RCGCGPIO_SPEC>`"] pub type RCGCGPIO = crate :: Reg < rcgcgpio :: RCGCGPIO_SPEC > ; # [doc = "General-Purpose Input/Output Run Mode Clock Gating Control"] pub mod rcgcgpio ; # [doc = "RCGCDMA (rw) register accessor: an alias for `Reg<RCGCDMA_SPEC>`"] pub type RCGCDMA = crate :: Reg < rcgcdma :: RCGCDMA_SPEC > ; # [doc = "Micro Direct Memory Access Run Mode Clock Gating Control"] pub mod rcgcdma ; # [doc = "RCGCHIB (rw) register accessor: an alias for `Reg<RCGCHIB_SPEC>`"] pub type RCGCHIB = crate :: Reg < rcgchib :: RCGCHIB_SPEC > ; # [doc = "Hibernation Run Mode Clock Gating Control"] pub mod rcgchib ; # [doc = "RCGCUART (rw) register accessor: an alias for `Reg<RCGCUART_SPEC>`"] pub type RCGCUART = crate :: Reg < rcgcuart :: RCGCUART_SPEC > ; # [doc = "Universal Asynchronous Receiver/Transmitter Run Mode Clock Gating Control"] pub mod rcgcuart ; # [doc = "RCGCSSI (rw) register accessor: an alias for `Reg<RCGCSSI_SPEC>`"] pub type RCGCSSI = crate :: Reg < rcgcssi :: RCGCSSI_SPEC > ; # [doc = "Synchronous Serial Interface Run Mode Clock Gating Control"] pub mod rcgcssi ; # [doc = "RCGCI2C (rw) register accessor: an alias for `Reg<RCGCI2C_SPEC>`"] pub type RCGCI2C = crate :: Reg < rcgci2c :: RCGCI2C_SPEC > ; # [doc = "Inter-Integrated Circuit Run Mode Clock Gating Control"] pub mod rcgci2c ; # [doc = "RCGCUSB (rw) register accessor: an alias for `Reg<RCGCUSB_SPEC>`"] pub type RCGCUSB = crate :: Reg < rcgcusb :: RCGCUSB_SPEC > ; # [doc = "Universal Serial Bus Run Mode Clock Gating Control"] pub mod rcgcusb ; # [doc = "RCGCCAN (rw) register accessor: an alias for `Reg<RCGCCAN_SPEC>`"] pub type RCGCCAN = crate :: Reg < rcgccan :: RCGCCAN_SPEC > ; # [doc = "Controller Area Network Run Mode Clock Gating Control"] pub mod rcgccan ; # [doc = "RCGCADC (rw) register accessor: an alias for `Reg<RCGCADC_SPEC>`"] pub type RCGCADC = crate :: Reg < rcgcadc :: RCGCADC_SPEC > ; # [doc = "Analog-to-Digital Converter Run Mode Clock Gating Control"] pub mod rcgcadc ; # [doc = "RCGCACMP (rw) register accessor: an alias for `Reg<RCGCACMP_SPEC>`"] pub type RCGCACMP = crate :: Reg < rcgcacmp :: RCGCACMP_SPEC > ; # [doc = "Analog Comparator Run Mode Clock Gating Control"] pub mod rcgcacmp ; # [doc = "RCGCPWM (rw) register accessor: an alias for `Reg<RCGCPWM_SPEC>`"] pub type RCGCPWM = crate :: Reg < rcgcpwm :: RCGCPWM_SPEC > ; # [doc = "Pulse Width Modulator Run Mode Clock Gating Control"] pub mod rcgcpwm ; # [doc = "RCGCQEI (rw) register accessor: an alias for `Reg<RCGCQEI_SPEC>`"] pub type RCGCQEI = crate :: Reg < rcgcqei :: RCGCQEI_SPEC > ; # [doc = "Quadrature Encoder Interface Run Mode Clock Gating Control"] pub mod rcgcqei ; # [doc = "RCGCEEPROM (rw) register accessor: an alias for `Reg<RCGCEEPROM_SPEC>`"] pub type RCGCEEPROM = crate :: Reg < rcgceeprom :: RCGCEEPROM_SPEC > ; # [doc = "EEPROM Run Mode Clock Gating Control"] pub mod rcgceeprom ; # [doc = "RCGCWTIMER (rw) register accessor: an alias for `Reg<RCGCWTIMER_SPEC>`"] pub type RCGCWTIMER = crate :: Reg < rcgcwtimer :: RCGCWTIMER_SPEC > ; # [doc = "32/64-Bit Wide General-Purpose Timer Run Mode Clock Gating Control"] pub mod rcgcwtimer ; # [doc = "SCGCWD (rw) register accessor: an alias for `Reg<SCGCWD_SPEC>`"] pub type SCGCWD = crate :: Reg < scgcwd :: SCGCWD_SPEC > ; # [doc = "Watchdog Timer Sleep Mode Clock Gating Control"] pub mod scgcwd ; # [doc = "SCGCTIMER (rw) register accessor: an alias for `Reg<SCGCTIMER_SPEC>`"] pub type SCGCTIMER = crate :: Reg < scgctimer :: SCGCTIMER_SPEC > ; # [doc = "16/32-Bit General-Purpose Timer Sleep Mode Clock Gating Control"] pub mod scgctimer ; # [doc = "SCGCGPIO (rw) register accessor: an alias for `Reg<SCGCGPIO_SPEC>`"] pub type SCGCGPIO = crate :: Reg < scgcgpio :: SCGCGPIO_SPEC > ; # [doc = "General-Purpose Input/Output Sleep Mode Clock Gating Control"] pub mod scgcgpio ; # [doc = "SCGCDMA (rw) register accessor: an alias for `Reg<SCGCDMA_SPEC>`"] pub type SCGCDMA = crate :: Reg < scgcdma :: SCGCDMA_SPEC > ; # [doc = "Micro Direct Memory Access Sleep Mode Clock Gating Control"] pub mod scgcdma ; # [doc = "SCGCHIB (rw) register accessor: an alias for `Reg<SCGCHIB_SPEC>`"] pub type SCGCHIB = crate :: Reg < scgchib :: SCGCHIB_SPEC > ; # [doc = "Hibernation Sleep Mode Clock Gating Control"] pub mod scgchib ; # [doc = "SCGCUART (rw) register accessor: an alias for `Reg<SCGCUART_SPEC>`"] pub type SCGCUART = crate :: Reg < scgcuart :: SCGCUART_SPEC > ; # [doc = "Universal Asynchronous Receiver/Transmitter Sleep Mode Clock Gating Control"] pub mod scgcuart ; # [doc = "SCGCSSI (rw) register accessor: an alias for `Reg<SCGCSSI_SPEC>`"] pub type SCGCSSI = crate :: Reg < scgcssi :: SCGCSSI_SPEC > ; # [doc = "Synchronous Serial Interface Sleep Mode Clock Gating Control"] pub mod scgcssi ; # [doc = "SCGCI2C (rw) register accessor: an alias for `Reg<SCGCI2C_SPEC>`"] pub type SCGCI2C = crate :: Reg < scgci2c :: SCGCI2C_SPEC > ; # [doc = "Inter-Integrated Circuit Sleep Mode Clock Gating Control"] pub mod scgci2c ; # [doc = "SCGCUSB (rw) register accessor: an alias for `Reg<SCGCUSB_SPEC>`"] pub type SCGCUSB = crate :: Reg < scgcusb :: SCGCUSB_SPEC > ; # [doc = "Universal Serial Bus Sleep Mode Clock Gating Control"] pub mod scgcusb ; # [doc = "SCGCCAN (rw) register accessor: an alias for `Reg<SCGCCAN_SPEC>`"] pub type SCGCCAN = crate :: Reg < scgccan :: SCGCCAN_SPEC > ; # [doc = "Controller Area Network Sleep Mode Clock Gating Control"] pub mod scgccan ; # [doc = "SCGCADC (rw) register accessor: an alias for `Reg<SCGCADC_SPEC>`"] pub type SCGCADC = crate :: Reg < scgcadc :: SCGCADC_SPEC > ; # [doc = "Analog-to-Digital Converter Sleep Mode Clock Gating Control"] pub mod scgcadc ; # [doc = "SCGCACMP (rw) register accessor: an alias for `Reg<SCGCACMP_SPEC>`"] pub type SCGCACMP = crate :: Reg < scgcacmp :: SCGCACMP_SPEC > ; # [doc = "Analog Comparator Sleep Mode Clock Gating Control"] pub mod scgcacmp ; # [doc = "SCGCPWM (rw) register accessor: an alias for `Reg<SCGCPWM_SPEC>`"] pub type SCGCPWM = crate :: Reg < scgcpwm :: SCGCPWM_SPEC > ; # [doc = "Pulse Width Modulator Sleep Mode Clock Gating Control"] pub mod scgcpwm ; # [doc = "SCGCQEI (rw) register accessor: an alias for `Reg<SCGCQEI_SPEC>`"] pub type SCGCQEI = crate :: Reg < scgcqei :: SCGCQEI_SPEC > ; # [doc = "Quadrature Encoder Interface Sleep Mode Clock Gating Control"] pub mod scgcqei ; # [doc = "SCGCEEPROM (rw) register accessor: an alias for `Reg<SCGCEEPROM_SPEC>`"] pub type SCGCEEPROM = crate :: Reg < scgceeprom :: SCGCEEPROM_SPEC > ; # [doc = "EEPROM Sleep Mode Clock Gating Control"] pub mod scgceeprom ; # [doc = "SCGCWTIMER (rw) register accessor: an alias for `Reg<SCGCWTIMER_SPEC>`"] pub type SCGCWTIMER = crate :: Reg < scgcwtimer :: SCGCWTIMER_SPEC > ; # [doc = "32/64-Bit Wide General-Purpose Timer Sleep Mode Clock Gating Control"] pub mod scgcwtimer ; # [doc = "DCGCWD (rw) register accessor: an alias for `Reg<DCGCWD_SPEC>`"] pub type DCGCWD = crate :: Reg < dcgcwd :: DCGCWD_SPEC > ; # [doc = "Watchdog Timer Deep-Sleep Mode Clock Gating Control"] pub mod dcgcwd ; # [doc = "DCGCTIMER (rw) register accessor: an alias for `Reg<DCGCTIMER_SPEC>`"] pub type DCGCTIMER = crate :: Reg < dcgctimer :: DCGCTIMER_SPEC > ; # [doc = "16/32-Bit General-Purpose Timer Deep-Sleep Mode Clock Gating Control"] pub mod dcgctimer ; # [doc = "DCGCGPIO (rw) register accessor: an alias for `Reg<DCGCGPIO_SPEC>`"] pub type DCGCGPIO = crate :: Reg < dcgcgpio :: DCGCGPIO_SPEC > ; # [doc = "General-Purpose Input/Output Deep-Sleep Mode Clock Gating Control"] pub mod dcgcgpio ; # [doc = "DCGCDMA (rw) register accessor: an alias for `Reg<DCGCDMA_SPEC>`"] pub type DCGCDMA = crate :: Reg < dcgcdma :: DCGCDMA_SPEC > ; # [doc = "Micro Direct Memory Access Deep-Sleep Mode Clock Gating Control"] pub mod dcgcdma ; # [doc = "DCGCHIB (rw) register accessor: an alias for `Reg<DCGCHIB_SPEC>`"] pub type DCGCHIB = crate :: Reg < dcgchib :: DCGCHIB_SPEC > ; # [doc = "Hibernation Deep-Sleep Mode Clock Gating Control"] pub mod dcgchib ; # [doc = "DCGCUART (rw) register accessor: an alias for `Reg<DCGCUART_SPEC>`"] pub type DCGCUART = crate :: Reg < dcgcuart :: DCGCUART_SPEC > ; # [doc = "Universal Asynchronous Receiver/Transmitter Deep-Sleep Mode Clock Gating Control"] pub mod dcgcuart ; # [doc = "DCGCSSI (rw) register accessor: an alias for `Reg<DCGCSSI_SPEC>`"] pub type DCGCSSI = crate :: Reg < dcgcssi :: DCGCSSI_SPEC > ; # [doc = "Synchronous Serial Interface Deep-Sleep Mode Clock Gating Control"] pub mod dcgcssi ; # [doc = "DCGCI2C (rw) register accessor: an alias for `Reg<DCGCI2C_SPEC>`"] pub type DCGCI2C = crate :: Reg < dcgci2c :: DCGCI2C_SPEC > ; # [doc = "Inter-Integrated Circuit Deep-Sleep Mode Clock Gating Control"] pub mod dcgci2c ; # [doc = "DCGCUSB (rw) register accessor: an alias for `Reg<DCGCUSB_SPEC>`"] pub type DCGCUSB = crate :: Reg < dcgcusb :: DCGCUSB_SPEC > ; # [doc = "Universal Serial Bus Deep-Sleep Mode Clock Gating Control"] pub mod dcgcusb ; # [doc = "DCGCCAN (rw) register accessor: an alias for `Reg<DCGCCAN_SPEC>`"] pub type DCGCCAN = crate :: Reg < dcgccan :: DCGCCAN_SPEC > ; # [doc = "Controller Area Network Deep-Sleep Mode Clock Gating Control"] pub mod dcgccan ; # [doc = "DCGCADC (rw) register accessor: an alias for `Reg<DCGCADC_SPEC>`"] pub type DCGCADC = crate :: Reg < dcgcadc :: DCGCADC_SPEC > ; # [doc = "Analog-to-Digital Converter Deep-Sleep Mode Clock Gating Control"] pub mod dcgcadc ; # [doc = "DCGCACMP (rw) register accessor: an alias for `Reg<DCGCACMP_SPEC>`"] pub type DCGCACMP = crate :: Reg < dcgcacmp :: DCGCACMP_SPEC > ; # [doc = "Analog Comparator Deep-Sleep Mode Clock Gating Control"] pub mod dcgcacmp ; # [doc = "DCGCPWM (rw) register accessor: an alias for `Reg<DCGCPWM_SPEC>`"] pub type DCGCPWM = crate :: Reg < dcgcpwm :: DCGCPWM_SPEC > ; # [doc = "Pulse Width Modulator Deep-Sleep Mode Clock Gating Control"] pub mod dcgcpwm ; # [doc = "DCGCQEI (rw) register accessor: an alias for `Reg<DCGCQEI_SPEC>`"] pub type DCGCQEI = crate :: Reg < dcgcqei :: DCGCQEI_SPEC > ; # [doc = "Quadrature Encoder Interface Deep-Sleep Mode Clock Gating Control"] pub mod dcgcqei ; # [doc = "DCGCEEPROM (rw) register accessor: an alias for `Reg<DCGCEEPROM_SPEC>`"] pub type DCGCEEPROM = crate :: Reg < dcgceeprom :: DCGCEEPROM_SPEC > ; # [doc = "EEPROM Deep-Sleep Mode Clock Gating Control"] pub mod dcgceeprom ; # [doc = "DCGCWTIMER (rw) register accessor: an alias for `Reg<DCGCWTIMER_SPEC>`"] pub type DCGCWTIMER = crate :: Reg < dcgcwtimer :: DCGCWTIMER_SPEC > ; # [doc = "32/64-Bit Wide General-Purpose Timer Deep-Sleep Mode Clock Gating Control"] pub mod dcgcwtimer ; # [doc = "PRWD (rw) register accessor: an alias for `Reg<PRWD_SPEC>`"] pub type PRWD = crate :: Reg < prwd :: PRWD_SPEC > ; # [doc = "Watchdog Timer Peripheral Ready"] pub mod prwd ; # [doc = "PRTIMER (rw) register accessor: an alias for `Reg<PRTIMER_SPEC>`"] pub type PRTIMER = crate :: Reg < prtimer :: PRTIMER_SPEC > ; # [doc = "16/32-Bit General-Purpose Timer Peripheral Ready"] pub mod prtimer ; # [doc = "PRGPIO (rw) register accessor: an alias for `Reg<PRGPIO_SPEC>`"] pub type PRGPIO = crate :: Reg < prgpio :: PRGPIO_SPEC > ; # [doc = "General-Purpose Input/Output Peripheral Ready"] pub mod prgpio ; # [doc = "PRDMA (rw) register accessor: an alias for `Reg<PRDMA_SPEC>`"] pub type PRDMA = crate :: Reg < prdma :: PRDMA_SPEC > ; # [doc = "Micro Direct Memory Access Peripheral Ready"] pub mod prdma ; # [doc = "PRHIB (rw) register accessor: an alias for `Reg<PRHIB_SPEC>`"] pub type PRHIB = crate :: Reg < prhib :: PRHIB_SPEC > ; # [doc = "Hibernation Peripheral Ready"] pub mod prhib ; # [doc = "PRUART (rw) register accessor: an alias for `Reg<PRUART_SPEC>`"] pub type PRUART = crate :: Reg < pruart :: PRUART_SPEC > ; # [doc = "Universal Asynchronous Receiver/Transmitter Peripheral Ready"] pub mod pruart ; # [doc = "PRSSI (rw) register accessor: an alias for `Reg<PRSSI_SPEC>`"] pub type PRSSI = crate :: Reg < prssi :: PRSSI_SPEC > ; # [doc = "Synchronous Serial Interface Peripheral Ready"] pub mod prssi ; # [doc = "PRI2C (rw) register accessor: an alias for `Reg<PRI2C_SPEC>`"] pub type PRI2C = crate :: Reg < pri2c :: PRI2C_SPEC > ; # [doc = "Inter-Integrated Circuit Peripheral Ready"] pub mod pri2c ; # [doc = "PRUSB (rw) register accessor: an alias for `Reg<PRUSB_SPEC>`"] pub type PRUSB = crate :: Reg < prusb :: PRUSB_SPEC > ; # [doc = "Universal Serial Bus Peripheral Ready"] pub mod prusb ; # [doc = "PRCAN (rw) register accessor: an alias for `Reg<PRCAN_SPEC>`"] pub type PRCAN = crate :: Reg < prcan :: PRCAN_SPEC > ; # [doc = "Controller Area Network Peripheral Ready"] pub mod prcan ; # [doc = "PRADC (rw) register accessor: an alias for `Reg<PRADC_SPEC>`"] pub type PRADC = crate :: Reg < pradc :: PRADC_SPEC > ; # [doc = "Analog-to-Digital Converter Peripheral Ready"] pub mod pradc ; # [doc = "PRACMP (rw) register accessor: an alias for `Reg<PRACMP_SPEC>`"] pub type PRACMP = crate :: Reg < pracmp :: PRACMP_SPEC > ; # [doc = "Analog Comparator Peripheral Ready"] pub mod pracmp ; # [doc = "PRPWM (rw) register accessor: an alias for `Reg<PRPWM_SPEC>`"] pub type PRPWM = crate :: Reg < prpwm :: PRPWM_SPEC > ; # [doc = "Pulse Width Modulator Peripheral Ready"] pub mod prpwm ; # [doc = "PRQEI (rw) register accessor: an alias for `Reg<PRQEI_SPEC>`"] pub type PRQEI = crate :: Reg < prqei :: PRQEI_SPEC > ; # [doc = "Quadrature Encoder Interface Peripheral Ready"] pub mod prqei ; # [doc = "PREEPROM (rw) register accessor: an alias for `Reg<PREEPROM_SPEC>`"] pub type PREEPROM = crate :: Reg < preeprom :: PREEPROM_SPEC > ; # [doc = "EEPROM Peripheral Ready"] pub mod preeprom ; # [doc = "PRWTIMER (rw) register accessor: an alias for `Reg<PRWTIMER_SPEC>`"] pub type PRWTIMER = crate :: Reg < prwtimer :: PRWTIMER_SPEC > ; # [doc = "32/64-Bit Wide General-Purpose Timer Peripheral Ready"] pub mod prwtimer ;