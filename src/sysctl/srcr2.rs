# [doc = "Register `SRCR2` reader"] pub struct R (crate :: R < SRCR2_SPEC >) ; impl core :: ops :: Deref for R { type Target = crate :: R < SRCR2_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl From < crate :: R < SRCR2_SPEC > > for R { # [inline (always)] fn from (reader : crate :: R < SRCR2_SPEC >) -> Self { R (reader) } } # [doc = "Register `SRCR2` writer"] pub struct W (crate :: W < SRCR2_SPEC >) ; impl core :: ops :: Deref for W { type Target = crate :: W < SRCR2_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl core :: ops :: DerefMut for W { # [inline (always)] fn deref_mut (& mut self) -> & mut Self :: Target { & mut self . 0 } } impl From < crate :: W < SRCR2_SPEC > > for W { # [inline (always)] fn from (writer : crate :: W < SRCR2_SPEC >) -> Self { W (writer) } } # [doc = "Field `SYSCTL_SRCR2_GPIOA` reader - Port A Reset Control"] pub type SYSCTL_SRCR2_GPIOA_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_GPIOA` writer - Port A Reset Control"] pub type SYSCTL_SRCR2_GPIOA_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; # [doc = "Field `SYSCTL_SRCR2_GPIOB` reader - Port B Reset Control"] pub type SYSCTL_SRCR2_GPIOB_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_GPIOB` writer - Port B Reset Control"] pub type SYSCTL_SRCR2_GPIOB_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; # [doc = "Field `SYSCTL_SRCR2_GPIOC` reader - Port C Reset Control"] pub type SYSCTL_SRCR2_GPIOC_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_GPIOC` writer - Port C Reset Control"] pub type SYSCTL_SRCR2_GPIOC_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; # [doc = "Field `SYSCTL_SRCR2_GPIOD` reader - Port D Reset Control"] pub type SYSCTL_SRCR2_GPIOD_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_GPIOD` writer - Port D Reset Control"] pub type SYSCTL_SRCR2_GPIOD_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; # [doc = "Field `SYSCTL_SRCR2_GPIOE` reader - Port E Reset Control"] pub type SYSCTL_SRCR2_GPIOE_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_GPIOE` writer - Port E Reset Control"] pub type SYSCTL_SRCR2_GPIOE_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; # [doc = "Field `SYSCTL_SRCR2_GPIOF` reader - Port F Reset Control"] pub type SYSCTL_SRCR2_GPIOF_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_GPIOF` writer - Port F Reset Control"] pub type SYSCTL_SRCR2_GPIOF_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; # [doc = "Field `SYSCTL_SRCR2_UDMA` reader - Micro-DMA Reset Control"] pub type SYSCTL_SRCR2_UDMA_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_UDMA` writer - Micro-DMA Reset Control"] pub type SYSCTL_SRCR2_UDMA_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; # [doc = "Field `SYSCTL_SRCR2_USB0` reader - USB0 Reset Control"] pub type SYSCTL_SRCR2_USB0_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_SRCR2_USB0` writer - USB0 Reset Control"] pub type SYSCTL_SRCR2_USB0_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , SRCR2_SPEC , bool , O > ; impl R { # [doc = "Bit 0 - Port A Reset Control"] # [inline (always)] pub fn sysctl_srcr2_gpioa (& self) -> SYSCTL_SRCR2_GPIOA_R { SYSCTL_SRCR2_GPIOA_R :: new ((self . bits & 1) != 0) } # [doc = "Bit 1 - Port B Reset Control"] # [inline (always)] pub fn sysctl_srcr2_gpiob (& self) -> SYSCTL_SRCR2_GPIOB_R { SYSCTL_SRCR2_GPIOB_R :: new (((self . bits >> 1) & 1) != 0) } # [doc = "Bit 2 - Port C Reset Control"] # [inline (always)] pub fn sysctl_srcr2_gpioc (& self) -> SYSCTL_SRCR2_GPIOC_R { SYSCTL_SRCR2_GPIOC_R :: new (((self . bits >> 2) & 1) != 0) } # [doc = "Bit 3 - Port D Reset Control"] # [inline (always)] pub fn sysctl_srcr2_gpiod (& self) -> SYSCTL_SRCR2_GPIOD_R { SYSCTL_SRCR2_GPIOD_R :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 4 - Port E Reset Control"] # [inline (always)] pub fn sysctl_srcr2_gpioe (& self) -> SYSCTL_SRCR2_GPIOE_R { SYSCTL_SRCR2_GPIOE_R :: new (((self . bits >> 4) & 1) != 0) } # [doc = "Bit 5 - Port F Reset Control"] # [inline (always)] pub fn sysctl_srcr2_gpiof (& self) -> SYSCTL_SRCR2_GPIOF_R { SYSCTL_SRCR2_GPIOF_R :: new (((self . bits >> 5) & 1) != 0) } # [doc = "Bit 13 - Micro-DMA Reset Control"] # [inline (always)] pub fn sysctl_srcr2_udma (& self) -> SYSCTL_SRCR2_UDMA_R { SYSCTL_SRCR2_UDMA_R :: new (((self . bits >> 13) & 1) != 0) } # [doc = "Bit 16 - USB0 Reset Control"] # [inline (always)] pub fn sysctl_srcr2_usb0 (& self) -> SYSCTL_SRCR2_USB0_R { SYSCTL_SRCR2_USB0_R :: new (((self . bits >> 16) & 1) != 0) } } impl W { # [doc = "Bit 0 - Port A Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_gpioa (& mut self) -> SYSCTL_SRCR2_GPIOA_W < 0 > { SYSCTL_SRCR2_GPIOA_W :: new (self) } # [doc = "Bit 1 - Port B Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_gpiob (& mut self) -> SYSCTL_SRCR2_GPIOB_W < 1 > { SYSCTL_SRCR2_GPIOB_W :: new (self) } # [doc = "Bit 2 - Port C Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_gpioc (& mut self) -> SYSCTL_SRCR2_GPIOC_W < 2 > { SYSCTL_SRCR2_GPIOC_W :: new (self) } # [doc = "Bit 3 - Port D Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_gpiod (& mut self) -> SYSCTL_SRCR2_GPIOD_W < 3 > { SYSCTL_SRCR2_GPIOD_W :: new (self) } # [doc = "Bit 4 - Port E Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_gpioe (& mut self) -> SYSCTL_SRCR2_GPIOE_W < 4 > { SYSCTL_SRCR2_GPIOE_W :: new (self) } # [doc = "Bit 5 - Port F Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_gpiof (& mut self) -> SYSCTL_SRCR2_GPIOF_W < 5 > { SYSCTL_SRCR2_GPIOF_W :: new (self) } # [doc = "Bit 13 - Micro-DMA Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_udma (& mut self) -> SYSCTL_SRCR2_UDMA_W < 13 > { SYSCTL_SRCR2_UDMA_W :: new (self) } # [doc = "Bit 16 - USB0 Reset Control"] # [inline (always)] # [must_use] pub fn sysctl_srcr2_usb0 (& mut self) -> SYSCTL_SRCR2_USB0_W < 16 > { SYSCTL_SRCR2_USB0_W :: new (self) } # [doc = "Writes raw bits to the register."] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . 0 . bits (bits) ; self } } # [doc = "Software Reset Control 2\n\nThis register you can [`read`](crate::generic::Reg::read), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [srcr2](index.html) module"] pub struct SRCR2_SPEC ; impl crate :: RegisterSpec for SRCR2_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [srcr2::R](R) reader structure"] impl crate :: Readable for SRCR2_SPEC { type Reader = R ; } # [doc = "`write(|w| ..)` method takes [srcr2::W](W) writer structure"] impl crate :: Writable for SRCR2_SPEC { type Writer = W ; const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets SRCR2 to value 0"] impl crate :: Resettable for SRCR2_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }