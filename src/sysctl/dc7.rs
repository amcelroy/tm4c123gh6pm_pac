# [doc = "Register `DC7` reader"] pub struct R (crate :: R < DC7_SPEC >) ; impl core :: ops :: Deref for R { type Target = crate :: R < DC7_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl From < crate :: R < DC7_SPEC > > for R { # [inline (always)] fn from (reader : crate :: R < DC7_SPEC >) -> Self { R (reader) } } # [doc = "Register `DC7` writer"] pub struct W (crate :: W < DC7_SPEC >) ; impl core :: ops :: Deref for W { type Target = crate :: W < DC7_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl core :: ops :: DerefMut for W { # [inline (always)] fn deref_mut (& mut self) -> & mut Self :: Target { & mut self . 0 } } impl From < crate :: W < DC7_SPEC > > for W { # [inline (always)] fn from (writer : crate :: W < DC7_SPEC >) -> Self { W (writer) } } # [doc = "Field `SYSCTL_DC7_DMACH0` reader - DMA Channel 0"] pub type SYSCTL_DC7_DMACH0_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH0` writer - DMA Channel 0"] pub type SYSCTL_DC7_DMACH0_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH1` reader - DMA Channel 1"] pub type SYSCTL_DC7_DMACH1_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH1` writer - DMA Channel 1"] pub type SYSCTL_DC7_DMACH1_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH2` reader - DMA Channel 2"] pub type SYSCTL_DC7_DMACH2_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH2` writer - DMA Channel 2"] pub type SYSCTL_DC7_DMACH2_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH3` reader - DMA Channel 3"] pub type SYSCTL_DC7_DMACH3_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH3` writer - DMA Channel 3"] pub type SYSCTL_DC7_DMACH3_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH4` reader - DMA Channel 4"] pub type SYSCTL_DC7_DMACH4_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH4` writer - DMA Channel 4"] pub type SYSCTL_DC7_DMACH4_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH5` reader - DMA Channel 5"] pub type SYSCTL_DC7_DMACH5_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH5` writer - DMA Channel 5"] pub type SYSCTL_DC7_DMACH5_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH6` reader - DMA Channel 6"] pub type SYSCTL_DC7_DMACH6_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH6` writer - DMA Channel 6"] pub type SYSCTL_DC7_DMACH6_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH7` reader - DMA Channel 7"] pub type SYSCTL_DC7_DMACH7_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH7` writer - DMA Channel 7"] pub type SYSCTL_DC7_DMACH7_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH8` reader - DMA Channel 8"] pub type SYSCTL_DC7_DMACH8_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH8` writer - DMA Channel 8"] pub type SYSCTL_DC7_DMACH8_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH9` reader - DMA Channel 9"] pub type SYSCTL_DC7_DMACH9_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH9` writer - DMA Channel 9"] pub type SYSCTL_DC7_DMACH9_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH10` reader - DMA Channel 10"] pub type SYSCTL_DC7_DMACH10_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH10` writer - DMA Channel 10"] pub type SYSCTL_DC7_DMACH10_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH11` reader - DMA Channel 11"] pub type SYSCTL_DC7_DMACH11_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH11` writer - DMA Channel 11"] pub type SYSCTL_DC7_DMACH11_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH12` reader - DMA Channel 12"] pub type SYSCTL_DC7_DMACH12_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH12` writer - DMA Channel 12"] pub type SYSCTL_DC7_DMACH12_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH13` reader - DMA Channel 13"] pub type SYSCTL_DC7_DMACH13_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH13` writer - DMA Channel 13"] pub type SYSCTL_DC7_DMACH13_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH14` reader - DMA Channel 14"] pub type SYSCTL_DC7_DMACH14_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH14` writer - DMA Channel 14"] pub type SYSCTL_DC7_DMACH14_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH15` reader - DMA Channel 15"] pub type SYSCTL_DC7_DMACH15_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH15` writer - DMA Channel 15"] pub type SYSCTL_DC7_DMACH15_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH16` reader - DMA Channel 16"] pub type SYSCTL_DC7_DMACH16_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH16` writer - DMA Channel 16"] pub type SYSCTL_DC7_DMACH16_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH17` reader - DMA Channel 17"] pub type SYSCTL_DC7_DMACH17_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH17` writer - DMA Channel 17"] pub type SYSCTL_DC7_DMACH17_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH18` reader - DMA Channel 18"] pub type SYSCTL_DC7_DMACH18_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH18` writer - DMA Channel 18"] pub type SYSCTL_DC7_DMACH18_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH19` reader - DMA Channel 19"] pub type SYSCTL_DC7_DMACH19_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH19` writer - DMA Channel 19"] pub type SYSCTL_DC7_DMACH19_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH20` reader - DMA Channel 20"] pub type SYSCTL_DC7_DMACH20_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH20` writer - DMA Channel 20"] pub type SYSCTL_DC7_DMACH20_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH21` reader - DMA Channel 21"] pub type SYSCTL_DC7_DMACH21_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH21` writer - DMA Channel 21"] pub type SYSCTL_DC7_DMACH21_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH22` reader - DMA Channel 22"] pub type SYSCTL_DC7_DMACH22_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH22` writer - DMA Channel 22"] pub type SYSCTL_DC7_DMACH22_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH23` reader - DMA Channel 23"] pub type SYSCTL_DC7_DMACH23_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH23` writer - DMA Channel 23"] pub type SYSCTL_DC7_DMACH23_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH24` reader - DMA Channel 24"] pub type SYSCTL_DC7_DMACH24_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH24` writer - DMA Channel 24"] pub type SYSCTL_DC7_DMACH24_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH25` reader - DMA Channel 25"] pub type SYSCTL_DC7_DMACH25_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH25` writer - DMA Channel 25"] pub type SYSCTL_DC7_DMACH25_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH26` reader - DMA Channel 26"] pub type SYSCTL_DC7_DMACH26_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH26` writer - DMA Channel 26"] pub type SYSCTL_DC7_DMACH26_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH27` reader - DMA Channel 27"] pub type SYSCTL_DC7_DMACH27_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH27` writer - DMA Channel 27"] pub type SYSCTL_DC7_DMACH27_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH28` reader - DMA Channel 28"] pub type SYSCTL_DC7_DMACH28_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH28` writer - DMA Channel 28"] pub type SYSCTL_DC7_DMACH28_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH29` reader - DMA Channel 29"] pub type SYSCTL_DC7_DMACH29_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH29` writer - DMA Channel 29"] pub type SYSCTL_DC7_DMACH29_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DC7_DMACH30` reader - DMA Channel 30"] pub type SYSCTL_DC7_DMACH30_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DC7_DMACH30` writer - DMA Channel 30"] pub type SYSCTL_DC7_DMACH30_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DC7_SPEC , bool , O > ; impl R { # [doc = "Bit 0 - DMA Channel 0"] # [inline (always)] pub fn sysctl_dc7_dmach0 (& self) -> SYSCTL_DC7_DMACH0_R { SYSCTL_DC7_DMACH0_R :: new ((self . bits & 1) != 0) } # [doc = "Bit 1 - DMA Channel 1"] # [inline (always)] pub fn sysctl_dc7_dmach1 (& self) -> SYSCTL_DC7_DMACH1_R { SYSCTL_DC7_DMACH1_R :: new (((self . bits >> 1) & 1) != 0) } # [doc = "Bit 2 - DMA Channel 2"] # [inline (always)] pub fn sysctl_dc7_dmach2 (& self) -> SYSCTL_DC7_DMACH2_R { SYSCTL_DC7_DMACH2_R :: new (((self . bits >> 2) & 1) != 0) } # [doc = "Bit 3 - DMA Channel 3"] # [inline (always)] pub fn sysctl_dc7_dmach3 (& self) -> SYSCTL_DC7_DMACH3_R { SYSCTL_DC7_DMACH3_R :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 4 - DMA Channel 4"] # [inline (always)] pub fn sysctl_dc7_dmach4 (& self) -> SYSCTL_DC7_DMACH4_R { SYSCTL_DC7_DMACH4_R :: new (((self . bits >> 4) & 1) != 0) } # [doc = "Bit 5 - DMA Channel 5"] # [inline (always)] pub fn sysctl_dc7_dmach5 (& self) -> SYSCTL_DC7_DMACH5_R { SYSCTL_DC7_DMACH5_R :: new (((self . bits >> 5) & 1) != 0) } # [doc = "Bit 6 - DMA Channel 6"] # [inline (always)] pub fn sysctl_dc7_dmach6 (& self) -> SYSCTL_DC7_DMACH6_R { SYSCTL_DC7_DMACH6_R :: new (((self . bits >> 6) & 1) != 0) } # [doc = "Bit 7 - DMA Channel 7"] # [inline (always)] pub fn sysctl_dc7_dmach7 (& self) -> SYSCTL_DC7_DMACH7_R { SYSCTL_DC7_DMACH7_R :: new (((self . bits >> 7) & 1) != 0) } # [doc = "Bit 8 - DMA Channel 8"] # [inline (always)] pub fn sysctl_dc7_dmach8 (& self) -> SYSCTL_DC7_DMACH8_R { SYSCTL_DC7_DMACH8_R :: new (((self . bits >> 8) & 1) != 0) } # [doc = "Bit 9 - DMA Channel 9"] # [inline (always)] pub fn sysctl_dc7_dmach9 (& self) -> SYSCTL_DC7_DMACH9_R { SYSCTL_DC7_DMACH9_R :: new (((self . bits >> 9) & 1) != 0) } # [doc = "Bit 10 - DMA Channel 10"] # [inline (always)] pub fn sysctl_dc7_dmach10 (& self) -> SYSCTL_DC7_DMACH10_R { SYSCTL_DC7_DMACH10_R :: new (((self . bits >> 10) & 1) != 0) } # [doc = "Bit 11 - DMA Channel 11"] # [inline (always)] pub fn sysctl_dc7_dmach11 (& self) -> SYSCTL_DC7_DMACH11_R { SYSCTL_DC7_DMACH11_R :: new (((self . bits >> 11) & 1) != 0) } # [doc = "Bit 12 - DMA Channel 12"] # [inline (always)] pub fn sysctl_dc7_dmach12 (& self) -> SYSCTL_DC7_DMACH12_R { SYSCTL_DC7_DMACH12_R :: new (((self . bits >> 12) & 1) != 0) } # [doc = "Bit 13 - DMA Channel 13"] # [inline (always)] pub fn sysctl_dc7_dmach13 (& self) -> SYSCTL_DC7_DMACH13_R { SYSCTL_DC7_DMACH13_R :: new (((self . bits >> 13) & 1) != 0) } # [doc = "Bit 14 - DMA Channel 14"] # [inline (always)] pub fn sysctl_dc7_dmach14 (& self) -> SYSCTL_DC7_DMACH14_R { SYSCTL_DC7_DMACH14_R :: new (((self . bits >> 14) & 1) != 0) } # [doc = "Bit 15 - DMA Channel 15"] # [inline (always)] pub fn sysctl_dc7_dmach15 (& self) -> SYSCTL_DC7_DMACH15_R { SYSCTL_DC7_DMACH15_R :: new (((self . bits >> 15) & 1) != 0) } # [doc = "Bit 16 - DMA Channel 16"] # [inline (always)] pub fn sysctl_dc7_dmach16 (& self) -> SYSCTL_DC7_DMACH16_R { SYSCTL_DC7_DMACH16_R :: new (((self . bits >> 16) & 1) != 0) } # [doc = "Bit 17 - DMA Channel 17"] # [inline (always)] pub fn sysctl_dc7_dmach17 (& self) -> SYSCTL_DC7_DMACH17_R { SYSCTL_DC7_DMACH17_R :: new (((self . bits >> 17) & 1) != 0) } # [doc = "Bit 18 - DMA Channel 18"] # [inline (always)] pub fn sysctl_dc7_dmach18 (& self) -> SYSCTL_DC7_DMACH18_R { SYSCTL_DC7_DMACH18_R :: new (((self . bits >> 18) & 1) != 0) } # [doc = "Bit 19 - DMA Channel 19"] # [inline (always)] pub fn sysctl_dc7_dmach19 (& self) -> SYSCTL_DC7_DMACH19_R { SYSCTL_DC7_DMACH19_R :: new (((self . bits >> 19) & 1) != 0) } # [doc = "Bit 20 - DMA Channel 20"] # [inline (always)] pub fn sysctl_dc7_dmach20 (& self) -> SYSCTL_DC7_DMACH20_R { SYSCTL_DC7_DMACH20_R :: new (((self . bits >> 20) & 1) != 0) } # [doc = "Bit 21 - DMA Channel 21"] # [inline (always)] pub fn sysctl_dc7_dmach21 (& self) -> SYSCTL_DC7_DMACH21_R { SYSCTL_DC7_DMACH21_R :: new (((self . bits >> 21) & 1) != 0) } # [doc = "Bit 22 - DMA Channel 22"] # [inline (always)] pub fn sysctl_dc7_dmach22 (& self) -> SYSCTL_DC7_DMACH22_R { SYSCTL_DC7_DMACH22_R :: new (((self . bits >> 22) & 1) != 0) } # [doc = "Bit 23 - DMA Channel 23"] # [inline (always)] pub fn sysctl_dc7_dmach23 (& self) -> SYSCTL_DC7_DMACH23_R { SYSCTL_DC7_DMACH23_R :: new (((self . bits >> 23) & 1) != 0) } # [doc = "Bit 24 - DMA Channel 24"] # [inline (always)] pub fn sysctl_dc7_dmach24 (& self) -> SYSCTL_DC7_DMACH24_R { SYSCTL_DC7_DMACH24_R :: new (((self . bits >> 24) & 1) != 0) } # [doc = "Bit 25 - DMA Channel 25"] # [inline (always)] pub fn sysctl_dc7_dmach25 (& self) -> SYSCTL_DC7_DMACH25_R { SYSCTL_DC7_DMACH25_R :: new (((self . bits >> 25) & 1) != 0) } # [doc = "Bit 26 - DMA Channel 26"] # [inline (always)] pub fn sysctl_dc7_dmach26 (& self) -> SYSCTL_DC7_DMACH26_R { SYSCTL_DC7_DMACH26_R :: new (((self . bits >> 26) & 1) != 0) } # [doc = "Bit 27 - DMA Channel 27"] # [inline (always)] pub fn sysctl_dc7_dmach27 (& self) -> SYSCTL_DC7_DMACH27_R { SYSCTL_DC7_DMACH27_R :: new (((self . bits >> 27) & 1) != 0) } # [doc = "Bit 28 - DMA Channel 28"] # [inline (always)] pub fn sysctl_dc7_dmach28 (& self) -> SYSCTL_DC7_DMACH28_R { SYSCTL_DC7_DMACH28_R :: new (((self . bits >> 28) & 1) != 0) } # [doc = "Bit 29 - DMA Channel 29"] # [inline (always)] pub fn sysctl_dc7_dmach29 (& self) -> SYSCTL_DC7_DMACH29_R { SYSCTL_DC7_DMACH29_R :: new (((self . bits >> 29) & 1) != 0) } # [doc = "Bit 30 - DMA Channel 30"] # [inline (always)] pub fn sysctl_dc7_dmach30 (& self) -> SYSCTL_DC7_DMACH30_R { SYSCTL_DC7_DMACH30_R :: new (((self . bits >> 30) & 1) != 0) } } impl W { # [doc = "Bit 0 - DMA Channel 0"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach0 (& mut self) -> SYSCTL_DC7_DMACH0_W < 0 > { SYSCTL_DC7_DMACH0_W :: new (self) } # [doc = "Bit 1 - DMA Channel 1"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach1 (& mut self) -> SYSCTL_DC7_DMACH1_W < 1 > { SYSCTL_DC7_DMACH1_W :: new (self) } # [doc = "Bit 2 - DMA Channel 2"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach2 (& mut self) -> SYSCTL_DC7_DMACH2_W < 2 > { SYSCTL_DC7_DMACH2_W :: new (self) } # [doc = "Bit 3 - DMA Channel 3"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach3 (& mut self) -> SYSCTL_DC7_DMACH3_W < 3 > { SYSCTL_DC7_DMACH3_W :: new (self) } # [doc = "Bit 4 - DMA Channel 4"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach4 (& mut self) -> SYSCTL_DC7_DMACH4_W < 4 > { SYSCTL_DC7_DMACH4_W :: new (self) } # [doc = "Bit 5 - DMA Channel 5"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach5 (& mut self) -> SYSCTL_DC7_DMACH5_W < 5 > { SYSCTL_DC7_DMACH5_W :: new (self) } # [doc = "Bit 6 - DMA Channel 6"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach6 (& mut self) -> SYSCTL_DC7_DMACH6_W < 6 > { SYSCTL_DC7_DMACH6_W :: new (self) } # [doc = "Bit 7 - DMA Channel 7"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach7 (& mut self) -> SYSCTL_DC7_DMACH7_W < 7 > { SYSCTL_DC7_DMACH7_W :: new (self) } # [doc = "Bit 8 - DMA Channel 8"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach8 (& mut self) -> SYSCTL_DC7_DMACH8_W < 8 > { SYSCTL_DC7_DMACH8_W :: new (self) } # [doc = "Bit 9 - DMA Channel 9"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach9 (& mut self) -> SYSCTL_DC7_DMACH9_W < 9 > { SYSCTL_DC7_DMACH9_W :: new (self) } # [doc = "Bit 10 - DMA Channel 10"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach10 (& mut self) -> SYSCTL_DC7_DMACH10_W < 10 > { SYSCTL_DC7_DMACH10_W :: new (self) } # [doc = "Bit 11 - DMA Channel 11"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach11 (& mut self) -> SYSCTL_DC7_DMACH11_W < 11 > { SYSCTL_DC7_DMACH11_W :: new (self) } # [doc = "Bit 12 - DMA Channel 12"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach12 (& mut self) -> SYSCTL_DC7_DMACH12_W < 12 > { SYSCTL_DC7_DMACH12_W :: new (self) } # [doc = "Bit 13 - DMA Channel 13"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach13 (& mut self) -> SYSCTL_DC7_DMACH13_W < 13 > { SYSCTL_DC7_DMACH13_W :: new (self) } # [doc = "Bit 14 - DMA Channel 14"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach14 (& mut self) -> SYSCTL_DC7_DMACH14_W < 14 > { SYSCTL_DC7_DMACH14_W :: new (self) } # [doc = "Bit 15 - DMA Channel 15"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach15 (& mut self) -> SYSCTL_DC7_DMACH15_W < 15 > { SYSCTL_DC7_DMACH15_W :: new (self) } # [doc = "Bit 16 - DMA Channel 16"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach16 (& mut self) -> SYSCTL_DC7_DMACH16_W < 16 > { SYSCTL_DC7_DMACH16_W :: new (self) } # [doc = "Bit 17 - DMA Channel 17"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach17 (& mut self) -> SYSCTL_DC7_DMACH17_W < 17 > { SYSCTL_DC7_DMACH17_W :: new (self) } # [doc = "Bit 18 - DMA Channel 18"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach18 (& mut self) -> SYSCTL_DC7_DMACH18_W < 18 > { SYSCTL_DC7_DMACH18_W :: new (self) } # [doc = "Bit 19 - DMA Channel 19"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach19 (& mut self) -> SYSCTL_DC7_DMACH19_W < 19 > { SYSCTL_DC7_DMACH19_W :: new (self) } # [doc = "Bit 20 - DMA Channel 20"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach20 (& mut self) -> SYSCTL_DC7_DMACH20_W < 20 > { SYSCTL_DC7_DMACH20_W :: new (self) } # [doc = "Bit 21 - DMA Channel 21"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach21 (& mut self) -> SYSCTL_DC7_DMACH21_W < 21 > { SYSCTL_DC7_DMACH21_W :: new (self) } # [doc = "Bit 22 - DMA Channel 22"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach22 (& mut self) -> SYSCTL_DC7_DMACH22_W < 22 > { SYSCTL_DC7_DMACH22_W :: new (self) } # [doc = "Bit 23 - DMA Channel 23"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach23 (& mut self) -> SYSCTL_DC7_DMACH23_W < 23 > { SYSCTL_DC7_DMACH23_W :: new (self) } # [doc = "Bit 24 - DMA Channel 24"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach24 (& mut self) -> SYSCTL_DC7_DMACH24_W < 24 > { SYSCTL_DC7_DMACH24_W :: new (self) } # [doc = "Bit 25 - DMA Channel 25"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach25 (& mut self) -> SYSCTL_DC7_DMACH25_W < 25 > { SYSCTL_DC7_DMACH25_W :: new (self) } # [doc = "Bit 26 - DMA Channel 26"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach26 (& mut self) -> SYSCTL_DC7_DMACH26_W < 26 > { SYSCTL_DC7_DMACH26_W :: new (self) } # [doc = "Bit 27 - DMA Channel 27"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach27 (& mut self) -> SYSCTL_DC7_DMACH27_W < 27 > { SYSCTL_DC7_DMACH27_W :: new (self) } # [doc = "Bit 28 - DMA Channel 28"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach28 (& mut self) -> SYSCTL_DC7_DMACH28_W < 28 > { SYSCTL_DC7_DMACH28_W :: new (self) } # [doc = "Bit 29 - DMA Channel 29"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach29 (& mut self) -> SYSCTL_DC7_DMACH29_W < 29 > { SYSCTL_DC7_DMACH29_W :: new (self) } # [doc = "Bit 30 - DMA Channel 30"] # [inline (always)] # [must_use] pub fn sysctl_dc7_dmach30 (& mut self) -> SYSCTL_DC7_DMACH30_W < 30 > { SYSCTL_DC7_DMACH30_W :: new (self) } # [doc = "Writes raw bits to the register."] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . 0 . bits (bits) ; self } } # [doc = "Device Capabilities 7\n\nThis register you can [`read`](crate::generic::Reg::read), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [dc7](index.html) module"] pub struct DC7_SPEC ; impl crate :: RegisterSpec for DC7_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [dc7::R](R) reader structure"] impl crate :: Readable for DC7_SPEC { type Reader = R ; } # [doc = "`write(|w| ..)` method takes [dc7::W](W) writer structure"] impl crate :: Writable for DC7_SPEC { type Writer = W ; const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DC7 to value 0"] impl crate :: Resettable for DC7_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }