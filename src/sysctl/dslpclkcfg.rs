# [doc = "Register `DSLPCLKCFG` reader"] pub struct R (crate :: R < DSLPCLKCFG_SPEC >) ; impl core :: ops :: Deref for R { type Target = crate :: R < DSLPCLKCFG_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl From < crate :: R < DSLPCLKCFG_SPEC > > for R { # [inline (always)] fn from (reader : crate :: R < DSLPCLKCFG_SPEC >) -> Self { R (reader) } } # [doc = "Register `DSLPCLKCFG` writer"] pub struct W (crate :: W < DSLPCLKCFG_SPEC >) ; impl core :: ops :: Deref for W { type Target = crate :: W < DSLPCLKCFG_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl core :: ops :: DerefMut for W { # [inline (always)] fn deref_mut (& mut self) -> & mut Self :: Target { & mut self . 0 } } impl From < crate :: W < DSLPCLKCFG_SPEC > > for W { # [inline (always)] fn from (writer : crate :: W < DSLPCLKCFG_SPEC >) -> Self { W (writer) } } # [doc = "Field `SYSCTL_DSLPCLKCFG_PIOSCPD` reader - PIOSC Power Down Request"] pub type SYSCTL_DSLPCLKCFG_PIOSCPD_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DSLPCLKCFG_PIOSCPD` writer - PIOSC Power Down Request"] pub type SYSCTL_DSLPCLKCFG_PIOSCPD_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DSLPCLKCFG_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DSLPCLKCFG_O` reader - Clock Source"] pub type SYSCTL_DSLPCLKCFG_O_R = crate :: FieldReader < u8 , SYSCTL_DSLPCLKCFG_O_A > ; # [doc = "Clock Source\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum SYSCTL_DSLPCLKCFG_O_A { # [doc = "0: MOSC"] SYSCTL_DSLPCLKCFG_O_IGN = 0 , # [doc = "1: PIOSC"] SYSCTL_DSLPCLKCFG_O_IO = 1 , # [doc = "3: LFIOSC"] SYSCTL_DSLPCLKCFG_O_30 = 3 , # [doc = "7: 32.768 kHz"] SYSCTL_DSLPCLKCFG_O_32 = 7 , } impl From < SYSCTL_DSLPCLKCFG_O_A > for u8 { # [inline (always)] fn from (variant : SYSCTL_DSLPCLKCFG_O_A) -> Self { variant as _ } } impl SYSCTL_DSLPCLKCFG_O_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub fn variant (& self) -> Option < SYSCTL_DSLPCLKCFG_O_A > { match self . bits { 0 => Some (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_IGN) , 1 => Some (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_IO) , 3 => Some (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_30) , 7 => Some (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_32) , _ => None , } } # [doc = "Checks if the value of the field is `SYSCTL_DSLPCLKCFG_O_IGN`"] # [inline (always)] pub fn is_sysctl_dslpclkcfg_o_ign (& self) -> bool { * self == SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_IGN } # [doc = "Checks if the value of the field is `SYSCTL_DSLPCLKCFG_O_IO`"] # [inline (always)] pub fn is_sysctl_dslpclkcfg_o_io (& self) -> bool { * self == SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_IO } # [doc = "Checks if the value of the field is `SYSCTL_DSLPCLKCFG_O_30`"] # [inline (always)] pub fn is_sysctl_dslpclkcfg_o_30 (& self) -> bool { * self == SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_30 } # [doc = "Checks if the value of the field is `SYSCTL_DSLPCLKCFG_O_32`"] # [inline (always)] pub fn is_sysctl_dslpclkcfg_o_32 (& self) -> bool { * self == SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_32 } } # [doc = "Field `SYSCTL_DSLPCLKCFG_O` writer - Clock Source"] pub type SYSCTL_DSLPCLKCFG_O_W < 'a , const O : u8 > = crate :: FieldWriter < 'a , u32 , DSLPCLKCFG_SPEC , u8 , SYSCTL_DSLPCLKCFG_O_A , 3 , O > ; impl < 'a , const O : u8 > SYSCTL_DSLPCLKCFG_O_W < 'a , O > { # [doc = "MOSC"] # [inline (always)] pub fn sysctl_dslpclkcfg_o_ign (self) -> & 'a mut W { self . variant (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_IGN) } # [doc = "PIOSC"] # [inline (always)] pub fn sysctl_dslpclkcfg_o_io (self) -> & 'a mut W { self . variant (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_IO) } # [doc = "LFIOSC"] # [inline (always)] pub fn sysctl_dslpclkcfg_o_30 (self) -> & 'a mut W { self . variant (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_30) } # [doc = "32.768 kHz"] # [inline (always)] pub fn sysctl_dslpclkcfg_o_32 (self) -> & 'a mut W { self . variant (SYSCTL_DSLPCLKCFG_O_A :: SYSCTL_DSLPCLKCFG_O_32) } } # [doc = "Field `SYSCTL_DSLPCLKCFG_D` reader - Divider Field Override"] pub type SYSCTL_DSLPCLKCFG_D_R = crate :: FieldReader < u8 , u8 > ; # [doc = "Field `SYSCTL_DSLPCLKCFG_D` writer - Divider Field Override"] pub type SYSCTL_DSLPCLKCFG_D_W < 'a , const O : u8 > = crate :: FieldWriter < 'a , u32 , DSLPCLKCFG_SPEC , u8 , u8 , 6 , O > ; impl R { # [doc = "Bit 1 - PIOSC Power Down Request"] # [inline (always)] pub fn sysctl_dslpclkcfg_pioscpd (& self) -> SYSCTL_DSLPCLKCFG_PIOSCPD_R { SYSCTL_DSLPCLKCFG_PIOSCPD_R :: new (((self . bits >> 1) & 1) != 0) } # [doc = "Bits 4:6 - Clock Source"] # [inline (always)] pub fn sysctl_dslpclkcfg_o (& self) -> SYSCTL_DSLPCLKCFG_O_R { SYSCTL_DSLPCLKCFG_O_R :: new (((self . bits >> 4) & 7) as u8) } # [doc = "Bits 23:28 - Divider Field Override"] # [inline (always)] pub fn sysctl_dslpclkcfg_d (& self) -> SYSCTL_DSLPCLKCFG_D_R { SYSCTL_DSLPCLKCFG_D_R :: new (((self . bits >> 23) & 0x3f) as u8) } } impl W { # [doc = "Bit 1 - PIOSC Power Down Request"] # [inline (always)] # [must_use] pub fn sysctl_dslpclkcfg_pioscpd (& mut self) -> SYSCTL_DSLPCLKCFG_PIOSCPD_W < 1 > { SYSCTL_DSLPCLKCFG_PIOSCPD_W :: new (self) } # [doc = "Bits 4:6 - Clock Source"] # [inline (always)] # [must_use] pub fn sysctl_dslpclkcfg_o (& mut self) -> SYSCTL_DSLPCLKCFG_O_W < 4 > { SYSCTL_DSLPCLKCFG_O_W :: new (self) } # [doc = "Bits 23:28 - Divider Field Override"] # [inline (always)] # [must_use] pub fn sysctl_dslpclkcfg_d (& mut self) -> SYSCTL_DSLPCLKCFG_D_W < 23 > { SYSCTL_DSLPCLKCFG_D_W :: new (self) } # [doc = "Writes raw bits to the register."] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . 0 . bits (bits) ; self } } # [doc = "Deep Sleep Clock Configuration\n\nThis register you can [`read`](crate::generic::Reg::read), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [dslpclkcfg](index.html) module"] pub struct DSLPCLKCFG_SPEC ; impl crate :: RegisterSpec for DSLPCLKCFG_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [dslpclkcfg::R](R) reader structure"] impl crate :: Readable for DSLPCLKCFG_SPEC { type Reader = R ; } # [doc = "`write(|w| ..)` method takes [dslpclkcfg::W](W) writer structure"] impl crate :: Writable for DSLPCLKCFG_SPEC { type Writer = W ; const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DSLPCLKCFG to value 0"] impl crate :: Resettable for DSLPCLKCFG_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }