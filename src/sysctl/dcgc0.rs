# [doc = "Register `DCGC0` reader"] pub struct R (crate :: R < DCGC0_SPEC >) ; impl core :: ops :: Deref for R { type Target = crate :: R < DCGC0_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl From < crate :: R < DCGC0_SPEC > > for R { # [inline (always)] fn from (reader : crate :: R < DCGC0_SPEC >) -> Self { R (reader) } } # [doc = "Register `DCGC0` writer"] pub struct W (crate :: W < DCGC0_SPEC >) ; impl core :: ops :: Deref for W { type Target = crate :: W < DCGC0_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl core :: ops :: DerefMut for W { # [inline (always)] fn deref_mut (& mut self) -> & mut Self :: Target { & mut self . 0 } } impl From < crate :: W < DCGC0_SPEC > > for W { # [inline (always)] fn from (writer : crate :: W < DCGC0_SPEC >) -> Self { W (writer) } } # [doc = "Field `SYSCTL_DCGC0_WDT0` reader - WDT0 Clock Gating Control"] pub type SYSCTL_DCGC0_WDT0_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_WDT0` writer - WDT0 Clock Gating Control"] pub type SYSCTL_DCGC0_WDT0_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DCGC0_HIB` reader - HIB Clock Gating Control"] pub type SYSCTL_DCGC0_HIB_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_HIB` writer - HIB Clock Gating Control"] pub type SYSCTL_DCGC0_HIB_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DCGC0_ADC0` reader - ADC0 Clock Gating Control"] pub type SYSCTL_DCGC0_ADC0_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_ADC0` writer - ADC0 Clock Gating Control"] pub type SYSCTL_DCGC0_ADC0_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DCGC0_ADC1` reader - ADC1 Clock Gating Control"] pub type SYSCTL_DCGC0_ADC1_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_ADC1` writer - ADC1 Clock Gating Control"] pub type SYSCTL_DCGC0_ADC1_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DCGC0_PWM0` reader - PWM Clock Gating Control"] pub type SYSCTL_DCGC0_PWM0_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_PWM0` writer - PWM Clock Gating Control"] pub type SYSCTL_DCGC0_PWM0_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DCGC0_CAN0` reader - CAN0 Clock Gating Control"] pub type SYSCTL_DCGC0_CAN0_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_CAN0` writer - CAN0 Clock Gating Control"] pub type SYSCTL_DCGC0_CAN0_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DCGC0_CAN1` reader - CAN1 Clock Gating Control"] pub type SYSCTL_DCGC0_CAN1_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_CAN1` writer - CAN1 Clock Gating Control"] pub type SYSCTL_DCGC0_CAN1_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; # [doc = "Field `SYSCTL_DCGC0_WDT1` reader - WDT1 Clock Gating Control"] pub type SYSCTL_DCGC0_WDT1_R = crate :: BitReader < bool > ; # [doc = "Field `SYSCTL_DCGC0_WDT1` writer - WDT1 Clock Gating Control"] pub type SYSCTL_DCGC0_WDT1_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , DCGC0_SPEC , bool , O > ; impl R { # [doc = "Bit 3 - WDT0 Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_wdt0 (& self) -> SYSCTL_DCGC0_WDT0_R { SYSCTL_DCGC0_WDT0_R :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 6 - HIB Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_hib (& self) -> SYSCTL_DCGC0_HIB_R { SYSCTL_DCGC0_HIB_R :: new (((self . bits >> 6) & 1) != 0) } # [doc = "Bit 16 - ADC0 Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_adc0 (& self) -> SYSCTL_DCGC0_ADC0_R { SYSCTL_DCGC0_ADC0_R :: new (((self . bits >> 16) & 1) != 0) } # [doc = "Bit 17 - ADC1 Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_adc1 (& self) -> SYSCTL_DCGC0_ADC1_R { SYSCTL_DCGC0_ADC1_R :: new (((self . bits >> 17) & 1) != 0) } # [doc = "Bit 20 - PWM Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_pwm0 (& self) -> SYSCTL_DCGC0_PWM0_R { SYSCTL_DCGC0_PWM0_R :: new (((self . bits >> 20) & 1) != 0) } # [doc = "Bit 24 - CAN0 Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_can0 (& self) -> SYSCTL_DCGC0_CAN0_R { SYSCTL_DCGC0_CAN0_R :: new (((self . bits >> 24) & 1) != 0) } # [doc = "Bit 25 - CAN1 Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_can1 (& self) -> SYSCTL_DCGC0_CAN1_R { SYSCTL_DCGC0_CAN1_R :: new (((self . bits >> 25) & 1) != 0) } # [doc = "Bit 28 - WDT1 Clock Gating Control"] # [inline (always)] pub fn sysctl_dcgc0_wdt1 (& self) -> SYSCTL_DCGC0_WDT1_R { SYSCTL_DCGC0_WDT1_R :: new (((self . bits >> 28) & 1) != 0) } } impl W { # [doc = "Bit 3 - WDT0 Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_wdt0 (& mut self) -> SYSCTL_DCGC0_WDT0_W < 3 > { SYSCTL_DCGC0_WDT0_W :: new (self) } # [doc = "Bit 6 - HIB Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_hib (& mut self) -> SYSCTL_DCGC0_HIB_W < 6 > { SYSCTL_DCGC0_HIB_W :: new (self) } # [doc = "Bit 16 - ADC0 Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_adc0 (& mut self) -> SYSCTL_DCGC0_ADC0_W < 16 > { SYSCTL_DCGC0_ADC0_W :: new (self) } # [doc = "Bit 17 - ADC1 Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_adc1 (& mut self) -> SYSCTL_DCGC0_ADC1_W < 17 > { SYSCTL_DCGC0_ADC1_W :: new (self) } # [doc = "Bit 20 - PWM Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_pwm0 (& mut self) -> SYSCTL_DCGC0_PWM0_W < 20 > { SYSCTL_DCGC0_PWM0_W :: new (self) } # [doc = "Bit 24 - CAN0 Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_can0 (& mut self) -> SYSCTL_DCGC0_CAN0_W < 24 > { SYSCTL_DCGC0_CAN0_W :: new (self) } # [doc = "Bit 25 - CAN1 Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_can1 (& mut self) -> SYSCTL_DCGC0_CAN1_W < 25 > { SYSCTL_DCGC0_CAN1_W :: new (self) } # [doc = "Bit 28 - WDT1 Clock Gating Control"] # [inline (always)] # [must_use] pub fn sysctl_dcgc0_wdt1 (& mut self) -> SYSCTL_DCGC0_WDT1_W < 28 > { SYSCTL_DCGC0_WDT1_W :: new (self) } # [doc = "Writes raw bits to the register."] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . 0 . bits (bits) ; self } } # [doc = "Deep Sleep Mode Clock Gating Control Register 0\n\nThis register you can [`read`](crate::generic::Reg::read), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [dcgc0](index.html) module"] pub struct DCGC0_SPEC ; impl crate :: RegisterSpec for DCGC0_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [dcgc0::R](R) reader structure"] impl crate :: Readable for DCGC0_SPEC { type Reader = R ; } # [doc = "`write(|w| ..)` method takes [dcgc0::W](W) writer structure"] impl crate :: Writable for DCGC0_SPEC { type Writer = W ; const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DCGC0 to value 0"] impl crate :: Resettable for DCGC0_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }