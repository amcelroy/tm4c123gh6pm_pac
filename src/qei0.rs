# [doc = r"Register block"] # [repr (C)] pub struct RegisterBlock { # [doc = "0x00 - QEI Control"] pub ctl : CTL , # [doc = "0x04 - QEI Status"] pub stat : STAT , # [doc = "0x08 - QEI Position"] pub pos : POS , # [doc = "0x0c - QEI Maximum Position"] pub maxpos : MAXPOS , # [doc = "0x10 - QEI Timer Load"] pub load : LOAD , # [doc = "0x14 - QEI Timer"] pub time : TIME , # [doc = "0x18 - QEI Velocity Counter"] pub count : COUNT , # [doc = "0x1c - QEI Velocity"] pub speed : SPEED , # [doc = "0x20 - QEI Interrupt Enable"] pub inten : INTEN , # [doc = "0x24 - QEI Raw Interrupt Status"] pub ris : RIS , # [doc = "0x28 - QEI Interrupt Status and Clear"] pub isc : ISC , } # [doc = "CTL (rw) register accessor: an alias for `Reg<CTL_SPEC>`"] pub type CTL = crate :: Reg < ctl :: CTL_SPEC > ; # [doc = "QEI Control"] pub mod ctl ; # [doc = "STAT (rw) register accessor: an alias for `Reg<STAT_SPEC>`"] pub type STAT = crate :: Reg < stat :: STAT_SPEC > ; # [doc = "QEI Status"] pub mod stat ; # [doc = "POS (rw) register accessor: an alias for `Reg<POS_SPEC>`"] pub type POS = crate :: Reg < pos :: POS_SPEC > ; # [doc = "QEI Position"] pub mod pos ; # [doc = "MAXPOS (rw) register accessor: an alias for `Reg<MAXPOS_SPEC>`"] pub type MAXPOS = crate :: Reg < maxpos :: MAXPOS_SPEC > ; # [doc = "QEI Maximum Position"] pub mod maxpos ; # [doc = "LOAD (rw) register accessor: an alias for `Reg<LOAD_SPEC>`"] pub type LOAD = crate :: Reg < load :: LOAD_SPEC > ; # [doc = "QEI Timer Load"] pub mod load ; # [doc = "TIME (rw) register accessor: an alias for `Reg<TIME_SPEC>`"] pub type TIME = crate :: Reg < time :: TIME_SPEC > ; # [doc = "QEI Timer"] pub mod time ; # [doc = "COUNT (rw) register accessor: an alias for `Reg<COUNT_SPEC>`"] pub type COUNT = crate :: Reg < count :: COUNT_SPEC > ; # [doc = "QEI Velocity Counter"] pub mod count ; # [doc = "SPEED (rw) register accessor: an alias for `Reg<SPEED_SPEC>`"] pub type SPEED = crate :: Reg < speed :: SPEED_SPEC > ; # [doc = "QEI Velocity"] pub mod speed ; # [doc = "INTEN (rw) register accessor: an alias for `Reg<INTEN_SPEC>`"] pub type INTEN = crate :: Reg < inten :: INTEN_SPEC > ; # [doc = "QEI Interrupt Enable"] pub mod inten ; # [doc = "RIS (rw) register accessor: an alias for `Reg<RIS_SPEC>`"] pub type RIS = crate :: Reg < ris :: RIS_SPEC > ; # [doc = "QEI Raw Interrupt Status"] pub mod ris ; # [doc = "ISC (rw) register accessor: an alias for `Reg<ISC_SPEC>`"] pub type ISC = crate :: Reg < isc :: ISC_SPEC > ; # [doc = "QEI Interrupt Status and Clear"] pub mod isc ;