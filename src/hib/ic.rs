# [doc = "Register `IC` reader"] pub struct R (crate :: R < IC_SPEC >) ; impl core :: ops :: Deref for R { type Target = crate :: R < IC_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl From < crate :: R < IC_SPEC > > for R { # [inline (always)] fn from (reader : crate :: R < IC_SPEC >) -> Self { R (reader) } } # [doc = "Register `IC` writer"] pub struct W (crate :: W < IC_SPEC >) ; impl core :: ops :: Deref for W { type Target = crate :: W < IC_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl core :: ops :: DerefMut for W { # [inline (always)] fn deref_mut (& mut self) -> & mut Self :: Target { & mut self . 0 } } impl From < crate :: W < IC_SPEC > > for W { # [inline (always)] fn from (writer : crate :: W < IC_SPEC >) -> Self { W (writer) } } # [doc = "Field `HIB_IC_RTCALT0` reader - RTC Alert0 Masked Interrupt Clear"] pub type HIB_IC_RTCALT0_R = crate :: BitReader < bool > ; # [doc = "Field `HIB_IC_RTCALT0` writer - RTC Alert0 Masked Interrupt Clear"] pub type HIB_IC_RTCALT0_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , IC_SPEC , bool , O > ; # [doc = "Field `HIB_IC_LOWBAT` reader - Low Battery Voltage Interrupt Clear"] pub type HIB_IC_LOWBAT_R = crate :: BitReader < bool > ; # [doc = "Field `HIB_IC_LOWBAT` writer - Low Battery Voltage Interrupt Clear"] pub type HIB_IC_LOWBAT_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , IC_SPEC , bool , O > ; # [doc = "Field `HIB_IC_EXTW` reader - External Wake-Up Interrupt Clear"] pub type HIB_IC_EXTW_R = crate :: BitReader < bool > ; # [doc = "Field `HIB_IC_EXTW` writer - External Wake-Up Interrupt Clear"] pub type HIB_IC_EXTW_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , IC_SPEC , bool , O > ; # [doc = "Field `HIB_IC_WC` reader - Write Complete/Capable Interrupt Clear"] pub type HIB_IC_WC_R = crate :: BitReader < bool > ; # [doc = "Field `HIB_IC_WC` writer - Write Complete/Capable Interrupt Clear"] pub type HIB_IC_WC_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , IC_SPEC , bool , O > ; impl R { # [doc = "Bit 0 - RTC Alert0 Masked Interrupt Clear"] # [inline (always)] pub fn hib_ic_rtcalt0 (& self) -> HIB_IC_RTCALT0_R { HIB_IC_RTCALT0_R :: new ((self . bits & 1) != 0) } # [doc = "Bit 2 - Low Battery Voltage Interrupt Clear"] # [inline (always)] pub fn hib_ic_lowbat (& self) -> HIB_IC_LOWBAT_R { HIB_IC_LOWBAT_R :: new (((self . bits >> 2) & 1) != 0) } # [doc = "Bit 3 - External Wake-Up Interrupt Clear"] # [inline (always)] pub fn hib_ic_extw (& self) -> HIB_IC_EXTW_R { HIB_IC_EXTW_R :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 4 - Write Complete/Capable Interrupt Clear"] # [inline (always)] pub fn hib_ic_wc (& self) -> HIB_IC_WC_R { HIB_IC_WC_R :: new (((self . bits >> 4) & 1) != 0) } } impl W { # [doc = "Bit 0 - RTC Alert0 Masked Interrupt Clear"] # [inline (always)] # [must_use] pub fn hib_ic_rtcalt0 (& mut self) -> HIB_IC_RTCALT0_W < 0 > { HIB_IC_RTCALT0_W :: new (self) } # [doc = "Bit 2 - Low Battery Voltage Interrupt Clear"] # [inline (always)] # [must_use] pub fn hib_ic_lowbat (& mut self) -> HIB_IC_LOWBAT_W < 2 > { HIB_IC_LOWBAT_W :: new (self) } # [doc = "Bit 3 - External Wake-Up Interrupt Clear"] # [inline (always)] # [must_use] pub fn hib_ic_extw (& mut self) -> HIB_IC_EXTW_W < 3 > { HIB_IC_EXTW_W :: new (self) } # [doc = "Bit 4 - Write Complete/Capable Interrupt Clear"] # [inline (always)] # [must_use] pub fn hib_ic_wc (& mut self) -> HIB_IC_WC_W < 4 > { HIB_IC_WC_W :: new (self) } # [doc = "Writes raw bits to the register."] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . 0 . bits (bits) ; self } } # [doc = "Hibernation Interrupt Clear\n\nThis register you can [`read`](crate::generic::Reg::read), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [ic](index.html) module"] pub struct IC_SPEC ; impl crate :: RegisterSpec for IC_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [ic::R](R) reader structure"] impl crate :: Readable for IC_SPEC { type Reader = R ; } # [doc = "`write(|w| ..)` method takes [ic::W](W) writer structure"] impl crate :: Writable for IC_SPEC { type Writer = W ; const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets IC to value 0"] impl crate :: Resettable for IC_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }